{"version":3,"sources":["helpers/util_emitter.js","store/actions.js","componentsReact/UserReplicies.js","componentsReact/BotAnswers.js","constants/constants_replicies.js","helpers/util_translate.js","componentsReact/App.js","helpers/util_keyBoard.js","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","assets/map-walls-bump.png","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/botMap.png","constants/constants_elements.js","assets/botAnim.glb","helpers/utils_loadAssets.js","store/actionByChangeQuadrant.js","helpers/helper_prepareMeshesFromAssets.js","shaders/saturate.js","shaders/saturate.vert","shaders/saturate.frag","components/component_collisionFloor.js","components/component_collisionWalls.js","components/component_checkNearItem.js","entities/createPlayer.js","systems/systemHtml_intro.js","systems/system_level.js","entities/Bot.js","helpers/util_GLTFcopy.js","systems/system_bots.js","store/createStore.js","index.js","helpers/util_deviceResizer.js","helpers/util_frameUpater.js","entities/createStudio.js","systems/systemHtml_info.js"],"names":["eventEmitter","getOrCreateArrFromObj","obj","key","emitter","storage","emit","id","data","forEach","action","subscribe","callback","push","filter","item","showAll","s","length","console","log","createEmitter","showMessages","dispatch","toggleFinalMessage","val","type","mode","clickFullScreen","exitFullScreen","clickInfo","toggleDialog","changeBot","phrase","clickPhrase","r","setTimeout","levelEvent","is","isDialog","toggleButtonDialog","isButtonDialog","UserReplicies","connect","state","userReplicies","app","ui","props","className","map","onClick","q","Math","floor","random","BotAnswers","botAnswers","a","TRANSLATE_WORLDS","currentLanguage","keyLanguage","t","pr","isShowClickFullScreen","isShowButtFullScreen","isShowInfo","isShowFinalMessage","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","href","target","KeyBoard","keys","keyUpdate","keyCode","isDown","document","addEventListener","event","bind","this","ASSETS_TO_LOAD","filename","levelRoomsSrc","px","pxjpg","nx","nxjpg","py","pyjpg","ny","nyjpg","pz","pzjpg","nz","nzjpg","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","botMap","mapBump","mapFloorOuter","wrap","MATERIALS_CONFIG","mat","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","skinning","S","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","lightDataOne","objLoader","textureLoader","gltfLoader","cubeTextureLoader","CHANGE_LAYER_STATE","oldState","newState","oldQuadrant","newQuadrant","emitData","emitKey","environmentMode","backgroundImg","counter","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","i","getData","conf","createCheckerNewQuadrant","update","x","y","z","currentQuadrant","isChanged","dataToLoad","assets","index","loadAsset","load","model","checkComplete","result","createMaterials","wrapS","wrapT","THREE","mapsKeys","materials","keyMap","Saturate","uniforms","value","vertexShader","fragmentShader","FLOORS_ARRAY","setItemToFloorsCollision","removeItemFromFloorsCollision","mesh","WALLS_ARRAY","setItemToWallCollision","removeItemFromWallCollision","arrItems","createPlayer","emitterLink","camera","isButtonsDisabled","isBlocked","mainObj","position","fromArray","rotation","frontObj","add","strenth","light","checkFloors","objFromLink","offset","delta","objFrom","vec3Src","vec3Ray","isDisable","check","updateData","copy","intersectsFloor","intersectObjects","distance","count","point","start","createComponentCollisionFloors","checkWalls","objToLink","objTo","vec3Src2","vec3Ray2","getWorldPosition","sub","intersectsWalls","createComponentCollisionWalls","checkNearItem","distanceTo","userData","nearPlayer","toNear","createCheckerNearItem","oldY","countDropped","isGameComplete","translateZ","isOpen","getObj","getCamera","setToPos","set","loader","querySelector","offsetLoader","isAnimateLoader","loaderTimeOut","style","marginLeft","STANDART_ROOMS","START_ROOMS","OFFSETS","Bot","inScene","_state","_targetAngle","container","_modelGroup","PI","_objFrom","_objTo","gltf","clone","animations","scene","skinnedMeshes","traverse","node","isSkinnedMesh","name","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","botScene","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","_componentCollision","_updateState","_collisionMeshes","visible","lookAt","_startRotate","abs","_startGo","arrWalls","intersectObject","appData","sceneEnvironment","backgroundImgKey","playerQuadrant","isStartCorridorShow","history","botIndex","phraseIndex","phrasesData","phrases","isCanChangeBotIndex","isCanChangeBotCounter","rootReducer","combineReducers","botPhrases","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","appWrapper","openAppFullScreenIfMobile","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","resize","e","width","height","fontSize","max","min","fullscreenElement","createDeviceResizer","init","emitFrameUpdate","time","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","createFrameUpdater","TWEEN","studio","canvas","renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","lightA","getState","background","fog","composer","EffectComposer","size","aspect","updateProjectionMatrix","addToScene","oldFogNear","oldFogFar","oldColor","oldBackgroundImgKey","startData","endData","to","onUpdate","setCamera","cam","addPass","RenderPass","ShaderPass","createStudio","player","rooms","allMeshes","collisionsBotsRooms","child","includes","geometry","wall","green","road","prepareMeshesFromAssets","group","objRooms","createRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","removeRoom","remove","isRemoveBot","startL","l","wentLevels","flagIsSpecial","initState","saveOldQuadrant","saveNewQuadrant","saveIsStartCorridorShow","keyCreateRoom","newMode","oldKv","curKv","createLevel","systemBots","iron","bot","groupBots","arrBots","setCollisionMesh","removeCollisionMesh","botWorldPos","prepareToSay","createSystemBots","checkerNewQuadrant","arrEmitData","createActionByChangedQuadrant","cont","createElement","display","classList","wrapper","appendChild","mess","innerHTML","closeButt","innerText","createInfo","startButtons","progressWrapper","dataset","lang","showStartButton","Promise","resolve","OBJLoader","GLTFLoader","then"],"mappings":"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","file":"static/js/main.631da82f.chunk.js","sourcesContent":["let eventEmitter = null\r\n\r\nconst createEmitter = () => {\r\n    const storage = {}\r\n    return {\r\n        emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n        subscribe: id => callback => {\r\n            getOrCreateArrFromObj(storage)(id).push(callback)\r\n            return () => storage[id] = storage[id].filter(item => item !== callback)\r\n        },\r\n        showAll () {\r\n            const s = {}\r\n            for (let key in storage) {\r\n                s[key] = storage[key].length\r\n            }\r\n            console.log(s)\r\n        },\r\n    }\r\n}\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\nexport const emitter = eventEmitter = eventEmitter || createEmitter()\r\n\r\n\r\n\r\n\r\n\r\n","import { emitter } from '../helpers/util_emitter'\r\n\r\n\r\nexport const showMessages = dispatch => ({\r\n    toggleFinalMessage: val => dispatch({\r\n        type: 'TOGGLE_FINAL_MESSAGE',\r\n        mode: val,\r\n    })\r\n})\r\n\r\n\r\nexport const clickFullScreen = dispatch => ({\r\n    clickFullScreen: () => {\r\n        dispatch({\r\n            type: 'CLICK_FULL_SCREEN',\r\n        })\r\n    },\r\n\r\n    exitFullScreen: () => {\r\n        dispatch({\r\n            type: 'EXIT_FULL_SCREEN',\r\n        })\r\n    },\r\n})\r\n\r\n\r\nexport const clickInfo = dispatch => {\r\n    return ({\r\n        clickInfo: val => {\r\n            dispatch({\r\n                type: 'INFO_TOGGLE',\r\n                mode: val,\r\n            })\r\n        },\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const toggleDialog = dispatch => ({\r\n    changeBot: data => {\r\n        dispatch({\r\n            type: 'CHANGE_BOT',\r\n            phrase: data,\r\n        })\r\n    },\r\n\r\n    clickPhrase: r => {\r\n        dispatch({\r\n            type: 'CLICK_PHRASE',\r\n            phrase: r,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'PHRASE_EVENT',\r\n                phrase: r,\r\n            })\r\n\r\n            r.levelEvent && emitter.emit('changeLevelMode')(r.levelEvent)\r\n        }, 1000)\r\n    },\r\n\r\n\r\n    toggleDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_DIALOG',\r\n            isDialog: is,\r\n        })\r\n    },\r\n\r\n\r\n    toggleButtonDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_BUTTON',\r\n            isButtonDialog: is,\r\n        })\r\n    }\r\n})\r\n","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.app.ui.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"userReplicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => {\r\n                        toggleDialog(props.dispatch).clickPhrase(item)\r\n                    }}>\r\n                    {item.q}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.app.ui.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"botAnswers\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <div className=\"q\">{item.q}</div>\r\n                    <div className=\"a\">{item.a}</div>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","export const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'open dialog': 'начать диалог',\r\n        'close dialog': 'закончить диалог',\r\n        'The end.': 'Это конец.',\r\n        'chapter': 'глава',\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        'After a long wandering in the desert...': 'После долгого блуждания по пустоши...',\r\n        'Stranger, I threw you a terminal with a pass phrase. Remember:': 'Незнакомец, я сбросил тебе терминал с парольной фразой. Запомни:',\r\n        'And blood-black nothingness began to spin...': 'Кроваво-черное ничто пустилось вить систему клеток,',\r\n        'A system of cells interlinked within cells interlinked within cells interlinked within one stem...' : 'связанных внутри, клеток, связанных внутри, клеток в едином стебле и явственно,',\r\n        'And dreadfully distinct against the dark, a tall white fountain played.': 'до жути на фоне тьмы ввысь белым бил фонтан.',\r\n        'Officer K-D-six-dash-three-dot-seven, let\\'s begin. Ready?': 'Офицер Кей Ди 6.3.7. приступим. Готовы?',\r\n        'Yes, sir.': 'Готов',\r\n        'No.': 'Не готов',\r\n        'Recite your baseline.': 'Ваша контрольная фраза.',\r\n        'I do not remember.': 'Я забыл.',\r\n        'I\\'ll come back later.': 'Я зайду попозже.',\r\n        'Cells.': 'Клетки.',\r\n        'Have you ever been in an institution? Cells.': 'Доводилось ли вам бывать в тюрьме? Клетки.',\r\n        'Do they keep you in a cell? Cells.': 'Вас держат в клетке? Клетки.',\r\n        'When you\\'re not performing your duties do they keep you in a little box? Cells.': 'Когда вы не исполняете обязанности, вас держат в коробке? Клетки.',\r\n        'Interlinked.': 'Связаны.',\r\n        'What\\'s it like to hold the hand of someone you love? Interlinked.': 'Что вы чувствуете держа за руку того кого любите? Связаны.',\r\n        'Did they teach you how to feel finger to finger? Interlinked.': 'Вас учили приставлять палец к пальцу? Связаны.',\r\n        'Do you long for having your heart interlinked? Interlinked.': 'Вы жаждете связать с кем-нибудь сердце? Связаны.',\r\n        'Do you dream about being interlinked? Interlinked.': 'Вам снится связь с кем-либо? Связаны.',\r\n        'What\\'s it like to hold your child in your arms? Interlinked.': 'Что вы чувствуете, держа в руках своего ребенка? Связаны.',\r\n        'Do you feel that there\\'s a part of you that\\'s missing? Interlinked.': 'Вы чувствуете, что вам чего-то не хватает? Связаны.',\r\n        'Within cells interlinked.': 'Клеток связанных внутри.',\r\n        'Why don\\'t you say that three times: Within cells interlinked.': 'Повторите три раза \"клеток связанных внутри',\r\n        'We\\'re done... Constant K, you can pick up your bonus.': 'На этом все. Кей стабилен, можете пройти за бонусом.',\r\n        'Thank you, sir.': 'Спасибо, сэр.',\r\n        '...If you read it, you find dropped terminal and got top level of desert. Welcome...': '...Если ты читаешь это, ты нашел упавший терминал и добрался до верхнего уровня пустоши.',\r\n        'Who are you?': 'Кто ты?',\r\n        'It does not matter. Later. May be..': 'Это неважно. Позже. Может быть..',\r\n        'Hey...': 'Эй...',\r\n\r\n        'open': 'пуск',\r\n\r\n        'Previous part: ': 'Предыдущая часть: ',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n    }\r\n}","import { emitter } from './util_emitter'\r\nimport { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\nlet currentLanguage = 'en'\r\n\r\nemitter.subscribe('setLanguage')(keyLanguage => {\r\n    currentLanguage = keyLanguage\r\n})\r\n\r\n\r\nexport const t = val => (TRANSLATE_WORLDS[currentLanguage] && TRANSLATE_WORLDS[currentLanguage][val]) || val\r\n","import { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { toggleDialog, clickFullScreen, clickInfo, showMessages } from '../store/actions'\r\nimport { emitter } from '../helpers/util_emitter'\r\nimport { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.app.ui.isButtonDialog,\r\n    isDialog: state.app.ui.isDialog,\r\n    isShowClickFullScreen: state.app.ui.isShowButtFullScreen,\r\n    isShowInfo: state.app.ui.isShowInfo,\r\n    isShowFinalMessage: state.app.ui.isShowFinalMessage,\r\n})\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n    !pr.dispatch && (pr.dispatch = props.dispatch)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ui\">\r\n            {props.isButtonDialog && (\r\n                <button\r\n                    className=\"butt-toggleDialog\"\r\n                    onClick={() => {toggleDialog(props.dispatch).toggleDialog(!props.isDialog)}}>\r\n                    {props.isDialog ? t('close dialog') : t('open dialog') }\r\n                </button>)}\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-left control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-left')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-left')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-left')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-left')}>\r\n                    &#9668;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-right control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-right')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-right')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-right')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-right')}>\r\n                    &#9658;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && (\r\n                <button\r\n                    className=\"butt-front control\"\r\n                    onMouseDown={() => emitter.emit('mouseDown')('butt-front')}\r\n                    onTouchStart={() => emitter.emit('mouseDown')('butt-front')}\r\n                    onMouseUp={() => emitter.emit('mouseUp')('butt-front')}\r\n                    onTouchEnd={() => emitter.emit('mouseUp')('butt-front')}>\r\n                    &#9650;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && props.isShowClickFullScreen && (\r\n                <button\r\n                    className=\"butt-fullscreen control\"\r\n                    onClick={() => {\r\n                        emitter.emit('mouseDown')('butt-fullscreen')\r\n                        clickFullScreen(props.dispatch).clickFullScreen()\r\n                    }}>\r\n                    &#10066;\r\n                </button>)}\r\n\r\n\r\n\r\n            {!props.isDialog && !props.isShowInfo && (\r\n                <button\r\n                    className=\"butt-info control\"\r\n                    onClick={() => clickInfo(props.dispatch).clickInfo(true)}>\r\n                    i\r\n                </button>)}\r\n\r\n\r\n\r\n\r\n            {props.isDialog && (\r\n                <div className=\"dialog\">\r\n                    <div className=\"dialog-inner\">\r\n                        <BotAnswers />\r\n                        <UserReplicies />\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowFinalMessage && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner final-message\">\r\n                        <button\r\n                            className=\"control butt-infoClose\"\r\n                            onClick={() => showMessages(props.dispatch).toggleFinalMessage(false)}>\r\n                            x\r\n                        </button>\r\n                        <p>{t('The end')}</p>\r\n                    </div>\r\n                </div>)}\r\n\r\n\r\n\r\n            {props.isShowInfo && (\r\n                <div className=\"info\">\r\n                    <div className=\"info-inner\">\r\n                        <button\r\n                            className=\"control butt-infoClose\"\r\n                            onClick={() => clickInfo(props.dispatch).clickInfo(false)}>\r\n                            x\r\n                        </button>\r\n                        <p>\r\n                            {`1 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/factory/\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {`2 ${t('chapter')}: `}\r\n                            <a href=\"http://js.otrisovano.ru/bridge\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {t('Author: ')}\r\n                            <a href=\"http://otrisovano.ru\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                        <p>\r\n                            {t('Github: ')}\r\n                            <a href=\"https://github.com/fire888/levels\\\" target=\"blank\">{ t('link') }</a>\r\n                        </p>\r\n                    </div>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const pr = { dispatch: null }\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","\r\n\r\n\r\nexport function KeyBoard (emitter) {\r\n    const keys = {\r\n        'up': false,\r\n        'left': false,\r\n        'right': false,\r\n        's': false,\r\n        'm': false,\r\n        'w': false,\r\n    }\r\n\r\n\r\n    const keyUpdate = function ( keyCode, isDown ) {\r\n        switch( keyCode ) {\r\n          case 38:\r\n            keys['up'] = isDown\r\n            break\r\n          case 37:\r\n            keys['left'] = isDown\r\n            break\r\n          case 39:\r\n            keys['right'] = isDown\r\n            break\r\n          case 83:\r\n            keys['s'] = isDown\r\n            break\r\n          case 77:\r\n            keys['m'] = isDown\r\n            break\r\n          case 87:\r\n            keys['w'] = isDown\r\n            break\r\n        }\r\n        emitter.emit('keyEvent')(keys)\r\n    }\r\n\r\n\r\n\r\n    document.addEventListener( 'keydown',\r\n      function (event) { keyUpdate( event.keyCode, true )}.bind(this) )\r\n    document.addEventListener( 'keyup',\r\n      function(event) { keyUpdate( event.keyCode, false )}.bind(this) )\r\n\r\n\r\n\r\n    emitter.subscribe('mouseDown')(key => {\r\n        if (key === 'butt-left') keyUpdate(37, true)\r\n        if (key === 'butt-right') keyUpdate(39, true)\r\n        if (key === 'butt-front') keyUpdate(38, true)\r\n    })\r\n    emitter.subscribe('mouseUp')(key => {\r\n        if (key === 'butt-left') keyUpdate(37, false)\r\n        if (key === 'butt-right') keyUpdate(39, false)\r\n        if (key === 'butt-front') keyUpdate(38, false)\r\n    })\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","export default __webpack_public_path__ + \"static/media/map-walls-bump.40f05869.png\";","export default __webpack_public_path__ + \"static/media/level-rooms.5251ade2.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","import { DoubleSide } from 'three'\r\n\r\nimport pxjpg from '../assets/skybox/px.jpg'\r\nimport nxjpg from '../assets/skybox/nx.jpg'\r\nimport pyjpg from '../assets/skybox/py.jpg'\r\nimport nyjpg from '../assets/skybox/ny.jpg'\r\nimport pzjpg from '../assets/skybox/pz.jpg'\r\nimport nzjpg from '../assets/skybox/nz.jpg'\r\n\r\nimport pxjpg2 from '../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../assets/matIronBox/negz.jpg'\r\n\r\nimport mapBump from '../assets/map-walls-bump.png'\r\nimport levelRoomsSrc from '../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../assets/floor_outer_map.jpg'\r\n\r\nimport botMap from '../assets/botMap.png'\r\nimport botSrc from '../assets/botAnim.glb'\r\n\r\n\r\n\r\nexport const ASSETS_TO_LOAD = [\r\n    {\r\n        type: 'obj',\r\n        filename: levelRoomsSrc,\r\n        key: 'level-rooms'\r\n    }, {\r\n        type: 'glb',\r\n        filename: botSrc,\r\n        key: 'bot'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg, nx: nxjpg, py: pyjpg, ny: nyjpg, pz: pzjpg, nz: nzjpg, },\r\n        key: 'skyBox'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg2, nx: nxjpg2, py: pyjpg2, ny: nyjpg2, pz: pzjpg2, nz: nzjpg2, },\r\n        key: 'ironEnv',\r\n    }, {\r\n        type: 'img',\r\n        filename: botMap,\r\n        key: 'botMap',\r\n    }, {\r\n        type: 'img',\r\n        filename: mapBump,\r\n        key: 'bumpWalls',\r\n    }, {\r\n        type: 'img',\r\n        filename: mapFloorOuter,\r\n        key: 'mapFloorOuter',\r\n        wrap: true,\r\n},]\r\n\r\n\r\n\r\n\r\nexport const MATERIALS_CONFIG = {\r\n\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            specular: 0x222222,\r\n        },\r\n    },\r\n\r\n\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.7,\r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.45,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -60, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    lightDataOne: {\r\n        //color: 0xc2d4f3,\r\n        color: 0xffffff,\r\n        strength: 5000,\r\n        pos: [0, 50, 5],\r\n    },\r\n    // lightDataTwo: {\r\n    //     color: 0xff0000,\r\n    //     strength: 0.2,\r\n    //     pos: [0, -30, 40],\r\n    // },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botAnim.5bfca6de.glb\";","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\nlet callback = null\r\nlet dataToLoad = null\r\nconst assets = {}\r\nlet objLoader, textureLoader, gltfLoader, cubeTextureLoader\r\nlet index = 0\r\n\r\n\r\n\r\nconst loadAsset = function (data) {\r\n    if (data.type === 'obj') {\r\n        objLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'glb' || data.type === 'gltf') {\r\n        gltfLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }        \r\n    if (data.type === 'img') {\r\n        textureLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'cubeTextures') {\r\n        cubeTextureLoader.load(\r\n            [\r\n                data.filename['px'],\r\n                data.filename['nx'],\r\n                data.filename['py'],\r\n                data.filename['ny'],\r\n                data.filename['pz'],\r\n                data.filename['nz'],\r\n            ],\r\n            result => {\r\n                assets[data.key] = result\r\n                checkComplete()\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst checkComplete = () => {\r\n    index ++\r\n    index < dataToLoad.length \r\n        ? loadAsset(dataToLoad[index])\r\n        : callback(assets)\r\n}\r\n\r\n\r\n\r\nexport const loadAssets = data => {\r\n    return new Promise(resolve => {\r\n        dataToLoad = data\r\n        callback = resolve\r\n        index = 0\r\n\r\n        objLoader = objLoader || new OBJLoader()\r\n        textureLoader = textureLoader || new THREE.TextureLoader()\r\n        gltfLoader = gltfLoader || new GLTFLoader()\r\n        cubeTextureLoader = cubeTextureLoader || new THREE.CubeTextureLoader()\r\n\r\n        loadAsset(dataToLoad[index])\r\n    })\r\n}\r\n\r\n","import { emitter } from '../helpers/util_emitter'\r\nimport { S, H } from '../constants/constants_elements'\r\nimport { pr } from '../componentsReact/App'\r\n\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n\r\n\r\n\r\n\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n                backgroundImg: false\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'DESTROY_START_CORRIDOR'\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 0,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_ENVIRONMENT',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: () => 100,\r\n            },\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'CHANGE_QUADRANT',\r\n                counter: val => ++val,\r\n            }\r\n        ],\r\n    },\r\n\r\n\r\n    /** **********************************************************/\r\n\r\n    // {\r\n    //     oldState: 'addWell', newState: 'addWell',\r\n    //     oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n    //     emitData: [\r\n    //         {\r\n    //             emitKey: 'CHANGE_QUADRANT',\r\n    //             counter: val => ++val,\r\n    //         }\r\n    //     ],\r\n    // },\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createActionByChangedQuadrant = () => {\r\n    const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        const data = checkerNewQuadrant.update(pos)\r\n        const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n        if (!isChanged) return;\r\n\r\n        const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n        arrEmitData.length && arrEmitData.forEach(item => pr.dispatch({\r\n            ...item,\r\n            type: item.emitKey,\r\n        }))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { MATERIALS_CONFIG } from '../constants/constants_elements'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport function prepareMeshesFromAssets (assets) {\r\n    const\r\n        materials = createMaterials(assets),\r\n        rooms = {},\r\n        allMeshes = {}\r\n\r\n    assets.collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            assets.collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.wall)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }  \r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        materials,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst createMaterials = assets => {\r\n    for (let key in assets) \r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map', 'normalMap', 'lightMap', 'aoMap']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}\r\n","import saturateVert from './saturate.vert'\r\nimport saturateFrag from './saturate.frag'\r\n\r\n\r\nexport const Saturate = {\r\n    uniforms: {\r\n        \"tDiffuse\": { value: null },\r\n    },\r\n\r\n    vertexShader: `\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix*modelViewMatrix*vec4( position, 1.0 );\r\n}`,\r\n    fragmentShader: `\r\n    \r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n    vec4 texel = texture2D( tDiffuse, vUv );\r\n    gl_FragColor = (texel * texel * texel) * 3.;\r\n\r\n}`,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/saturate.e0a3a086.vert\";","export default __webpack_public_path__ + \"static/media/saturate.eede5ac0.frag\";","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet FLOORS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionFloors = (objFromLink, offset, delta, speed) => {\r\n    const objFrom = objFromLink\r\n    const offsetFromFloor = offset\r\n    const offsetFromFloorFactor = delta\r\n    const speedDown = speed\r\n\r\n    const vec3Src = new THREE.Vector3()\r\n    const vec3Ray = new THREE.Vector3(0, -1, 0)\r\n\r\n    let isDisable = true\r\n\r\n    return {\r\n        check: updateData => {\r\n            if (isDisable) return;\r\n\r\n            vec3Src.copy(objFrom.position)\r\n            const raycasterDown = new THREE.Raycaster(vec3Src, vec3Ray)\r\n            const intersectsFloor = raycasterDown.intersectObjects(FLOORS_ARRAY)\r\n            if (intersectsFloor && intersectsFloor[0] && intersectsFloor[0].distance > offsetFromFloor + offsetFromFloorFactor) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            }\r\n            if (intersectsFloor && !intersectsFloor[0]) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            } \r\n            objFrom.position.y = intersectsFloor[0].point.y + offsetFromFloor\r\n        },\r\n        start: () => {\r\n            isDisable = false\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToFloorsCollision = item => FLOORS_ARRAY.push(item)\r\nexport const removeItemFromFloorsCollision = item => FLOORS_ARRAY = FLOORS_ARRAY.filter(mesh => mesh !== item) \r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet WALLS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFromLink, objToLink, offset) => {\r\n    const offsetWallCollision = offset\r\n    const objFrom = objFromLink\r\n    const objTo = objToLink\r\n\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            vec3Src2.copy(objFrom.position)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2)\r\n            const intersectsWalls = raycasterWalls.intersectObjects(WALLS_ARRAY)\r\n\r\n            return intersectsWalls[0] && intersectsWalls[0].distance < offsetWallCollision\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToWallCollision = item => WALLS_ARRAY.push(item)\r\nexport const removeItemFromWallCollision = item => WALLS_ARRAY = WALLS_ARRAY.filter(mesh => item !== mesh)\r\n","\r\n\r\nlet arrItems = []\r\n\r\n\r\n\r\nexport const addItemToNearChecker = item => arrItems.push(item)\r\n\r\n\r\n\r\nexport const removeItemByName = name => arrItems = arrItems.filter(item => item.name !== name)\r\n\r\n\r\n\r\nexport const createCheckerNearItem = (mesh, emitter) => () => {\r\n    arrItems.forEach(item => {\r\n        if (mesh.position.distanceTo(item.position) < 10 && !item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = true\r\n            emitter.emit('nearMesh')({ toNear: true, mesh: item })\r\n        }\r\n        if (mesh.position.distanceTo(item.position) >= 10 && item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = false\r\n            emitter.emit('nearMesh')({ toNear: false, mesh: item })\r\n        }\r\n    })\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\nimport { playerConfig } from '../constants/constants_elements'\r\n\r\nimport { createComponentCollisionFloors } from '../components/component_collisionFloor'\r\nimport { createComponentCollisionWalls } from '../components/component_collisionWalls'\r\nimport { createCheckerNearItem } from '../components/component_checkNearItem'\r\n\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { showMessages } from '../store/actions'\r\nimport { pr } from '../componentsReact/App'\r\n\r\n\r\n\r\nexport function createPlayer (emitterLink) {\r\n    const emitter = emitterLink\r\n\r\n    const {\r\n        startPos,\r\n        startRot,\r\n        cameraData,\r\n        frontObjPos,\r\n        lightDataOne,\r\n        lightDataTwo,\r\n        speed,\r\n        offsetFromFloor,\r\n        offsetFromFloorFactor,\r\n        speedDown,\r\n        offsetWallCollision,\r\n        speedRot,\r\n    } = playerConfig\r\n\r\n\r\n    let camera\r\n    let keys = {}\r\n    let isButtonsDisabled = false\r\n    let isBlocked = true\r\n\r\n    const mainObj = new THREE.Object3D()\r\n    mainObj.position.fromArray(startPos)\r\n    mainObj.rotation.fromArray(startRot)\r\n\r\n    const frontObj = new THREE.Object3D()\r\n    frontObj.position.fromArray(frontObjPos)\r\n    mainObj.add(frontObj)\r\n  \r\n    {\r\n        const { fov, ratio, near, far, pos } = cameraData\r\n        camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n        camera.position.fromArray(pos)\r\n        mainObj.add(camera)\r\n    }\r\n\r\n    {\r\n        const { color, strenth, pos } = lightDataOne\r\n        const light = new THREE.PointLight(color, strenth)\r\n        light.position.fromArray(pos)\r\n        mainObj.add(light)\r\n    }\r\n\r\n    {\r\n      //const { color, strenth, pos } = lightDataTwo\r\n      //const light = new THREE.PointLight(color, strenth)\r\n      //light.position.fromArray(pos)\r\n      //mainObj.add(light)\r\n    }\r\n\r\n    const checkFloors = createComponentCollisionFloors(mainObj, offsetFromFloor, offsetFromFloorFactor, speedDown)\r\n    const checkWalls = createComponentCollisionWalls(mainObj, frontObj, offsetWallCollision)\r\n    const checkNearItem = createCheckerNearItem(mainObj, emitter)\r\n\r\n    let oldY = mainObj.position.y\r\n    let countDropped = 0\r\n    let isGameComplete = false\r\n\r\n    const update = data => {\r\n        if (isButtonsDisabled) return;\r\n        if (isBlocked) return;\r\n\r\n        checkFloors.check(data)\r\n\r\n        if (!keys) return;\r\n\r\n        if (keys['up']) {\r\n            if (checkWalls.check()) return;\r\n\r\n            mainObj.translateZ(-speed * data.count)\r\n            //console.log(mainObj.position.x,  mainObj.position.y, mainObj.position.z)\r\n            checkNearItem()\r\n            emitter.emit('playerMove')(mainObj.position)\r\n        }\r\n        keys['left'] && (mainObj.rotation.y += (speedRot * data.count))\r\n        keys['right'] && (mainObj.rotation.y -= (speedRot * data.count))\r\n\r\n\r\n        if (oldY > mainObj.position.y) {\r\n            ++countDropped\r\n        } else {\r\n            countDropped = 0\r\n        }\r\n        oldY = mainObj.position.y\r\n\r\n        if (countDropped > 800 && !isGameComplete) {\r\n            isGameComplete = true\r\n            setTimeout(() => {\r\n                showMessages(pr.dispatch).toggleFinalMessage(true)\r\n            }, 20000)\r\n        }\r\n    }\r\n\r\n\r\n    emitter.subscribe('keyEvent')(data => keys = data)\r\n    emitter.subscribe(FRAME_UPDATE)(update)\r\n    emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n    return {\r\n        start: () => { \r\n            isBlocked = false\r\n            checkFloors.start()\r\n        },\r\n        getObj: () => mainObj,\r\n        getCamera: () => camera,\r\n        setToPos: (x, y, z) => mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n\r\n","import '../stylesheets/style.css'\r\n\r\n\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n      if (!isAnimateLoader) return;\r\n\r\n      setTimeout(() => {\r\n            offsetLoader ++;\r\n            offsetLoader == 0 && (offsetLoader = -100)\r\n            loader.style.marginLeft = offsetLoader + '%'\r\n            loaderTimeOut()\r\n      }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport const showStartButton = emitter => {\r\n    const startButtons = document.querySelector('.startbuttons-wrapper')\r\n    const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n    const hideStartScreen = e => {\r\n        emitter.emit('setLanguage')(e.target.dataset.lang)\r\n        document.querySelector('.start-screen').style.display = 'none'\r\n    }\r\n\r\n    isAnimateLoader = false\r\n    startButtons.style.display = 'flex'\r\n    startButtons.addEventListener('click', hideStartScreen)\r\n    progressWrapper.style.display = 'none'\r\n}\r\n\r\n","import {\r\n    setItemToFloorsCollision,\r\n    removeItemFromFloorsCollision, \r\n} from '../components/component_collisionFloor'\r\nimport {\r\n    setItemToWallCollision,\r\n    removeItemFromWallCollision,\r\n} from '../components/component_collisionWalls'\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\nconst EXIT_ROOMS = ['room_07']\r\n\r\n\r\n\r\n\r\n\r\nexport function createLevel (emitter, rooms, allMeshes, store) {\r\n    const group = new THREE.Group()\r\n    const objRooms = {}\r\n\r\n\r\n    let isBotLevel = false\r\n    //let isCanAddStairs = false\r\n    let state = 'normal' // 'addBot' || 'addStairs' || 'addWell'\r\n\r\n\r\n    const createRoom = (kv, key) => {\r\n        const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        \r\n        const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}` \r\n\r\n        const mesh = rooms[instanceKey].clone()\r\n        mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n        setItemToFloorsCollision(mesh)\r\n        setItemToWallCollision(mesh)\r\n        group.add(mesh)\r\n        objRooms[objKey] = mesh\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'createRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isAddBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_06' && createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n    }\r\n\r\n\r\n    const removeRoom = kv => {\r\n        const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n        if (!objRooms[objKey]) return;\r\n\r\n    \r\n        const instanceKey = objRooms[objKey].name\r\n\r\n        // objRooms[objKey].children[0].geometry.dispose()\r\n        // objRooms[objKey].children[0].material.dispose()\r\n        group.remove(objRooms[objKey])\r\n        removeItemFromFloorsCollision(objRooms[objKey])\r\n        removeItemFromWallCollision(objRooms[objKey])\r\n        delete objRooms[objKey]\r\n\r\n        if (instanceKey === 'room_01') {\r\n            isBotLevel = false\r\n        }\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'destroyRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isRemoveBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_dummy' && removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n        instanceKey === 'room_06' && removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    createRoom([0, -1, 0], 'room_02')\r\n    createRoom([0, -1, -1], 'room_02')\r\n    createRoom([-1, -1, 0], 'room_02')\r\n    createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n    /** add remove start corridors */\r\n    const startL = {}\r\n    for (let i = 0; i < START_ROOMS.length; ++i) {\r\n        const l = allMeshes[START_ROOMS[i]].clone()\r\n        setItemToFloorsCollision(l)\r\n        setItemToWallCollision(l)\r\n        group.add(l)\r\n        l.position.set(0, -1 * H, 0)\r\n        startL[START_ROOMS[i]] = l\r\n    }\r\n\r\n\r\n\r\n\r\n    let wentLevels = 0\r\n    let flagIsSpecial = false\r\n\r\n    const initState = store.getState()\r\n    let saveOldQuadrant = initState.app.playerQuadrant.oldQuadrant\r\n    let saveNewQuadrant = initState.app.playerQuadrant.newQuadrant\r\n    let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n\r\n\r\n\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n\r\n        if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n            saveIsStartCorridorShow = false\r\n            for (let key in startL) {\r\n                removeItemFromFloorsCollision(startL[key])\r\n                removeItemFromWallCollision(startL[key])\r\n                group.remove(startL[key])\r\n            }\r\n        }\r\n\r\n\r\n        const { type, levelState, oldQuadrant, newQuadrant, counter } = newState.app.playerQuadrant\r\n\r\n\r\n        if ( type !== 'CHANGE_QUADRANT' ) return;\r\n\r\n\r\n        if (\r\n            saveOldQuadrant[0] !== oldQuadrant[0] ||\r\n            saveOldQuadrant[1] !== oldQuadrant[1] ||\r\n            saveOldQuadrant[2] !== oldQuadrant[2] ||\r\n            saveNewQuadrant[0] !== newQuadrant[0] ||\r\n            saveNewQuadrant[1] !== newQuadrant[1] ||\r\n            saveNewQuadrant[2] !== newQuadrant[2]\r\n        ) {\r\n            saveOldQuadrant = [...oldQuadrant]\r\n            saveNewQuadrant = [...newQuadrant]\r\n        } else {\r\n            return;\r\n        }\r\n\r\n\r\n        //let keyCreateRoom = false\r\n        let keyCreateRoom = STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        if (counter) {\r\n            wentLevels = counter(wentLevels)\r\n\r\n            if (flagIsSpecial) {\r\n                flagIsSpecial = false\r\n            } else {\r\n                if (wentLevels < 3) {\r\n                    state = 'normal'\r\n                } else if (wentLevels < 100) {\r\n                    if (state === 'normal') {\r\n                        state = 'addBot'\r\n                    }\r\n                } else {\r\n                    state = 'addStairs'\r\n                }\r\n\r\n\r\n                if (state === 'addBot') {\r\n                    keyCreateRoom = 'room_01'\r\n                    flagIsSpecial = true\r\n                }\r\n                if (state === 'addStairs') {\r\n                    keyCreateRoom = 'room_06'\r\n                    flagIsSpecial = true\r\n                }\r\n                if (state === 'addWell') {\r\n                    keyCreateRoom = 'room_07'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        emitter.subscribe('changeLevelMode')(newMode => state = newMode)\r\n\r\n\r\n        const oldKv = oldQuadrant, curKv = newQuadrant\r\n        // move west\r\n        if (curKv[0] < oldKv[0]) {\r\n            console.log('----------- west')\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create west\r\n            createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create soush\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n        // move east\r\n        if (curKv[0] > oldKv[0]) {\r\n            console.log('----------- east')\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create east\r\n            createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move north\r\n        if (curKv[2] < oldKv[2]) {\r\n            console.log('-----------north')\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n            // set center to south\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create north\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move south\r\n        if (curKv[2] > oldKv[2]) {\r\n            console.log('-----------south')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n            // set center to north\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create south\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n        // move top\r\n        if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n            console.log('-----------top')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n            // remove left\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create left\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n            // remove right\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create right\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n        }\r\n\r\n    })\r\n\r\n    return { group }\r\n}\r\n\r\n\r\n\r\n// const geometry = mesh.geometry\r\n// const wireframe = new THREE.WireframeGeometry( geometry );\r\n// const line = new THREE.LineSegments( wireframe );\r\n// line.material.color = { r: 0.5, g: 0.5, b: 0.5}\r\n// line.material.linewidth = 50\r\n// line.material.opacity = 0.5;\r\n// line.material.transparent = true;\r\n// mesh.add( line );","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../helpers/util_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this._modelGroup = new THREE.Group()\r\n        this._modelGroup.position.x = OFFSETS['room_01'].x\r\n        this._modelGroup.position.z = OFFSETS['room_01'].z\r\n        this._modelGroup.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this._modelGroup)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this._modelGroup.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this._modelGroup.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[0])\r\n        this._walkAction.play()\r\n\r\n        this._modelGroup.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n\r\n        this._modelGroup.lookAt(pos.x, this.container.position.y, pos.z)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this._modelGroup.translateZ(0.1)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this._modelGroup.rotation.y += ((this._targetAngle - this._modelGroup.rotation.y) < 0) ? -.01 : .01\r\n            this._modelGroup.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this._modelGroup.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this._modelGroup.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","import * as THREE from 'three'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { MAT_IRON } from '../constants/constants_elements'\r\nimport { Bot } from '../entities/Bot'\r\nimport { pr } from '../componentsReact/App'\r\nimport { toggleDialog } from '../store/actions'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\n//const H_BOT = 14.193\r\nconst H_BOT = 14\r\n\r\n\r\n\r\n\r\nexport const createSystemBots = (assets, materials, emitter, store) => {\r\n    Bot.botMaterial = materials.iron\r\n    Bot.botScene = assets.bot\r\n\r\n\r\n\r\n    const groupBots = new THREE.Group()\r\n    const arrBots = []\r\n\r\n\r\n\r\n    for (let i = 0; i < 5; ++i) {\r\n        const bot = new Bot()\r\n        groupBots.add(bot.container)\r\n        bot.container.position.set(-30 + i * 30, -92, 750)\r\n        bot.inScene = 'aaa'\r\n        bot.setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n        arrBots.push(bot)\r\n    }\r\n\r\n\r\n\r\n\r\n    emitter.subscribe(FRAME_UPDATE)(data => {\r\n        for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n    })\r\n\r\n\r\n\r\n\r\n    const initState = store.getState()\r\n    let saveIsStartCorridorShow = initState.app.level.isStartCorridorShow\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n        if (saveIsStartCorridorShow && saveIsStartCorridorShow !== newState.app.level.isStartCorridorShow) {\r\n            saveIsStartCorridorShow = newState.app.level.isStartCorridorShow\r\n\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                arrBots[i].inScene = null\r\n                arrBots[i].container.position.y = -10000\r\n                arrBots[i].removeCollisionMesh()\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    emitter.subscribe('levelChanged')(({ typeLevelChange, instanceKey, objKey, kv, isAddBot, isRemoveBot }) => {\r\n        if (isAddBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (!arrBots[i].inScene) {\r\n                    arrBots[i].inScene = objKey\r\n                    arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                    arrBots[i].setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (isRemoveBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (arrBots[i].inScene === objKey) {\r\n                    arrBots[i].inScene = null\r\n                    arrBots[i].container.position.y = -10000\r\n                    arrBots[i].removeCollisionMesh()\r\n                }\r\n            } \r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        for (let i = 0; i < arrBots.length; ++i) {\r\n            if (!arrBots[i].inScene) continue;\r\n\r\n            const botWorldPos = new THREE.Vector3()\r\n            arrBots[i]._modelGroup.getWorldPosition(botWorldPos)\r\n            const distance = botWorldPos.distanceTo(pos)\r\n\r\n\r\n            if (arrBots[i]._state === 'say' && distance > 30) {\r\n                arrBots[i]._startRotate()\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(false)\r\n                continue;\r\n            }\r\n\r\n\r\n            if (arrBots[i]._state !== 'say' && distance < 30) {\r\n                arrBots[i].prepareToSay(pos)\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(true)\r\n                continue;\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    return {\r\n        groupBots,\r\n    } \r\n}\r\n\r\n\r\n","import { createStore , applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { combineReducers } from 'redux'\r\nimport { FLOORS_CONF } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nconst DIALOGS_DATA = [\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Привет !',\r\n                a: 'День добрый, кремниевая форма жизни.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Что это за место?',\r\n                a: 'Это вход в энтропийный гипер-лабиринт.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Что будет, если я войду в него?',\r\n                a: 'Лабиринт ждет.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Куда ведут эти коридоры ?',\r\n                a: 'Они приведут тебя к финалу.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            }, {\r\n                q: 'Я пошел дальше.',\r\n                a: 'Мы еще увидимся.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n    ]\r\n}, {\r\n\r\n\r\n\r\n    phrases: [\r\n        {\r\n            q: 'Что ты здесь делаешь ?',\r\n            a: 'Собираю энергию ночи.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },\r\n        {\r\n            q: 'В какую сторону мне идти ?',\r\n            a: 'Здесь нет сторон. Здесь важна только длина пути.',\r\n            event: 'close',\r\n            //levelEvent: null,\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Я уже долго иду.',\r\n            a: 'Ты прошел достаточно для этого уровня.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },{\r\n            q: 'Что это значит?',\r\n            a: 'Тебе открыт путь на одну ступень выше.',\r\n            event: 'close',\r\n            levelEvent: 'addStairs',\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n// %%%%%%%%%%%%%%%%%%%%%%% 22222222222222222 %%%%%%%%%%%%%%%%%%%%\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Я ищу финал.',\r\n            a: 'Я помню о твоем пути.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        }, {\r\n            q: 'Вы все так похожи.',\r\n            a: 'Мы еще встретимся.',\r\n            event: 'close',\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Это снова ты?',\r\n                a: 'Да, мы все едины.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            }, {\r\n                q: 'Тут все коридоры повторяются.',\r\n                a: 'Суть всего в едином.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Как долго еще идти.',\r\n                a: 'Тебе будет знак, когда ты будешь готов.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            }, {\r\n                q: 'Как я узнаю этот знак.',\r\n                a: 'Я подам его.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Это одинаковый сегмент коридора с тобой.',\r\n                a: 'Ты готов к новому уровню.',\r\n                event: 'close',\r\n                levelEvent: 'addStairs',\r\n            },\r\n        ]\r\n    },\r\n\r\n// %%%%%%%%%%%%%%%%%%%%% 33333333 %%%%%%%%%%%%%%%%%%%%%%\r\n\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Привет снова. Как выбраться. Уже надоело.',\r\n            a: 'Ты не постиг дзен.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },\r\n        {\r\n            q: 'Ты-то как выходишь на поверхность?',\r\n            a: 'У меня свой путь.',\r\n            event: 'close',\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Ты все на своем пути?',\r\n                a: 'Как и ты.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Как долго ты на нем?',\r\n                a: 'Эти стены нас слышат.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Мне кажется, ты идешь в нагрузку к этому сегменту коридора.',\r\n                a: 'Тебе открыт следующий уровень.',\r\n                event: 'close',\r\n                levelEvent: 'addStairs',\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n// %%%%%%%%%%%%%%%%%%%%% 444444444444444 %%%%%%%%%%%%%%\r\n\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Ничего не меняется.',\r\n            a: 'Меняется количество пройденных шагов.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },\r\n        {\r\n            q: 'Это место считает шаги?',\r\n            a: 'Это место ждет.',\r\n            event: 'close',\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Как давно ты здесь?',\r\n                a: 'Время не имеет значения, значение имеет лишь путь.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Но ты же не идешь.',\r\n                a: 'Зато ты каждый раз проходишь мимо.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Сделай новый уровень.',\r\n                a: 'Ты готов - новый уровень ждет тебя.',\r\n                event: 'close',\r\n                levelEvent: 'addStairs',\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n// %%%%%%%%%%%%%%%%%% 5555555 %%%%%%%%%%%%%%%%%%%\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Ты и есть это место. Ты управляешь сегментами.',\r\n            a: 'Ты почти дошел до края.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },\r\n        {\r\n            q: 'Зачем тебе это?',\r\n            a: 'Это способ свернуть пространство. Больше движения. Больше сегментов.',\r\n            event: 'close',\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Как много путников попадало сюда.',\r\n                a: 'Много и они до сих пор здесь.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Почему я их не встретил?',\r\n                a: 'У каждого своя система сегментов и свой наставник.',\r\n                event: 'close',\r\n                levelEvent: null,\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Ты выпустишь меня?',\r\n                a: 'Все стороны света открыты тебе.',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Я хочу встретить других.',\r\n                a: 'Тебе открыт новый уровень.',\r\n                event: 'close',\r\n                levelEvent: 'addStairs',\r\n            },\r\n        ]\r\n    },\r\n\r\n// %%%%%%%%%%%%%%%%%%% 6666666666666666 %%%%%%%%%%%%%%%%%%\r\n\r\n\r\n{\r\n    phrases: [\r\n        {\r\n            q: 'Все повторяется.',\r\n            a: 'Все повторяется с небольшой разницей.',\r\n            event: 'nextReply',\r\n            levelEvent: null,\r\n        },\r\n        {\r\n            q: 'Как много этажей еще ждет меня?',\r\n            a: 'Все зависит от тебя.',\r\n            event: 'close',\r\n            levelEvent: null,\r\n        },\r\n    ]\r\n},\r\n\r\n\r\n\r\n    {\r\n        phrases: [\r\n            {\r\n                q: 'Все мой путь окончен.',\r\n                a: 'Ты отказываешься идти?',\r\n                event: 'nextReply',\r\n                levelEvent: null,\r\n            },\r\n            {\r\n                q: 'Да, ты безумен.',\r\n                a: 'Я освобождаю тебя.',\r\n                event: 'close',\r\n                levelEvent: 'addWell',\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst appData = {\r\n    sceneEnvironment: {\r\n        color: FLOORS_CONF['-1']['outer'].color,\r\n        fogNear: FLOORS_CONF['-1']['outer'].fogNear,\r\n        fogFar: FLOORS_CONF['-1']['outer'].fogFar,\r\n        backgroundImgKey: 'skyBox',\r\n    },\r\n\r\n    playerQuadrant: {\r\n        oldQuadrant: [0, 0, 0],\r\n        newQuadrant: [0, 0, 0],\r\n        counter: null,\r\n    },\r\n\r\n    level: {\r\n        isStartCorridorShow: true,\r\n    },\r\n\r\n    ui: {\r\n        isShowButtFullScreen: true,\r\n        isShowInfo: false,\r\n        isShowFinalMessage: false,\r\n        botAnswers: [],\r\n        userReplicies: [],\r\n        history: [],\r\n        isDialog: false,\r\n        isButtonDialog: false,\r\n    },\r\n\r\n    botIndex: -1,\r\n    phraseIndex: 0,\r\n    phrasesData: DIALOGS_DATA,\r\n    isCanChangeBotIndex: true,\r\n    isCanChangeBotCounter: 0,\r\n}\r\n\r\n\r\n\r\nconst app = function(state = appData, action) {\r\n    if (action.type === 'CLICK_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'EXIT_FULL_SCREEN') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowButtFullScreen: true,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'INFO_TOGGLE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: false,\r\n                isShowInfo: action.mode,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'TOGGLE_FINAL_MESSAGE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isShowFinalMessage: action.mode,\r\n                isShowInfo: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_ENVIRONMENT') {\r\n        const { newQuadrant, environmentMode } = action\r\n\r\n        if (!FLOORS_CONF[newQuadrant[1]]) return state;\r\n\r\n        const { fogNear, fogFar, color } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n        return ({\r\n            ...state,\r\n            sceneEnvironment: {\r\n                fogNear,\r\n                fogFar,\r\n                color,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    if (action.type === 'CHANGE_QUADRANT') {\r\n\r\n        let isCanChangeBotCounter = state.isCanChangeBotCounter + 1;\r\n        let isCanChangeBotIndex = state.isCanChangeBotIndex\r\n        if (isCanChangeBotCounter > 2) {\r\n            isCanChangeBotIndex = true\r\n            isCanChangeBotCounter = 0\r\n        }\r\n\r\n        return ({\r\n            ...state,\r\n            playerQuadrant: {\r\n                ...action,\r\n            },\r\n            isCanChangeBotIndex,\r\n            isCanChangeBotCounter,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'DESTROY_START_CORRIDOR') {\r\n        return ({\r\n            ...state,\r\n            level: {\r\n                ...state.level,\r\n                isStartCorridorShow: false,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (action.type === 'CLICK_PHRASE') {\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                botAnswers: [\r\n                    ...state.ui.botAnswers,\r\n                    action.phrase,\r\n                ],\r\n                userReplicies: [],\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'PHRASE_EVENT') {\r\n        const { event } = action.phrase\r\n\r\n        if (event === 'nextReply') {\r\n            const botPhrases = state.phrasesData[state.botIndex]\r\n            const userReplicies = [botPhrases.phrases[state.phraseIndex + 1]]\r\n\r\n            return ({\r\n                ...state,\r\n                phraseIndex: state.phraseIndex + 1,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies,\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        if (event === 'close') {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    userReplicies: [],\r\n                    isButtonDialog: true,\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'CHANGE_BOT') {\r\n        return ({\r\n            ...state,\r\n            isCanChangeBotIndex: true,\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    if (action.type === 'TOGGLE_DIALOG') {\r\n        //////////////////////////////////////////// TODO: UNCOMMENT\r\n        if (!state.isCanChangeBotIndex) {\r\n            return ({\r\n                ...state,\r\n                ui: {\r\n                    ...state.ui,\r\n                    isDialog: action.isDialog,\r\n                    isButtonDialog: true,\r\n                },\r\n\r\n            })\r\n        }\r\n        const phraseIndex = state.isCanChangeBotIndex ? 0 : state.phraseIndex\r\n        const botIndex = state.isCanChangeBotIndex ? state.botIndex + 1 : state.botIndex\r\n        const isButtonDialog = false\r\n        /////////////////////////////////////////////////////\r\n\r\n\r\n        ///////////////////////////////////////////// TODO: REMOVE\r\n        // let botIndex = state.botIndex\r\n        // let phraseIndex = state.phraseIndex\r\n        // if (action.isDialog) {\r\n        //     botIndex = state.botIndex + 1\r\n        //     phraseIndex = 0\r\n        // }\r\n        // const isButtonDialog = !action.isDialog\r\n        // /////////////////////////////////////////////////\r\n\r\n\r\n        const userReplicies = state.phrasesData[botIndex] ? [state.phrasesData[botIndex].phrases[phraseIndex]] : []\r\n\r\n        return ({\r\n            ...state,\r\n\r\n            ui: {\r\n                ...state.ui,\r\n                userReplicies,\r\n                botAnswers: [],\r\n                isDialog: action.isDialog,\r\n                isButtonDialog,\r\n            },\r\n\r\n            isCanChangeBotIndex: false,\r\n            botIndex,\r\n            phraseIndex,\r\n        })\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_BUTTON') {\r\n\r\n        return ({\r\n            ...state,\r\n            ui: {\r\n                ...state.ui,\r\n                isDialog: false,\r\n                isButtonDialog: action.isButtonDialog,\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ app })\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n","import { createDeviceResizer } from './helpers/util_deviceResizer'\r\nimport { KeyBoard } from './helpers/util_keyBoard'\r\nimport { emitter } from './helpers/util_emitter'\r\nimport { createFrameUpdater } from './helpers/util_frameUpater'\r\nimport { createActionByChangedQuadrant } from './store/actionByChangeQuadrant'\r\n\r\nimport { ASSETS_TO_LOAD } from './constants/constants_elements'\r\n\r\nimport { loadAssets } from './helpers/utils_loadAssets'\r\nimport { prepareMeshesFromAssets } from './helpers/helper_prepareMeshesFromAssets'\r\n\r\nimport { createStudio } from './entities/createStudio'\r\nimport { createPlayer } from './entities/createPlayer'\r\n\r\n\r\nimport { showStartButton } from './systems/systemHtml_intro'\r\nimport { createInfo } from './systems/systemHtml_info'\r\nimport { createLevel } from './systems/system_level'\r\nimport { createSystemBots } from './systems/system_bots'\r\n\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { FRAME_UPDATE } from './constants/constants_elements'\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentsReact/App';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/createStore'\r\n\r\n\r\n  \r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n\r\n\r\n\r\n\r\ncreateDeviceResizer(emitter)\r\n\r\n\r\nconst init = assets => {\r\n    createFrameUpdater(emitter)\r\n    emitter.subscribe(FRAME_UPDATE)(() => TWEEN.update())\r\n\r\n    const studio = createStudio(emitter, assets, store)\r\n\r\n    /** player */\r\n    new KeyBoard(emitter)\r\n    const player = createPlayer(emitter)\r\n    studio.setCamera(player.getCamera())\r\n    studio.addToScene(player.getObj())\r\n\r\n    /** prepare assets */\r\n    const { allMeshes,  rooms, materials } = prepareMeshesFromAssets(assets)\r\n\r\n    /** level */\r\n    const { group } = createLevel(emitter, rooms, allMeshes, store)\r\n    studio.addToScene(group)\r\n\r\n    /** bots */\r\n    const systemBots = createSystemBots(assets, materials, emitter, store)\r\n    studio.addToScene(systemBots.groupBots)\r\n\r\n\r\n    createActionByChangedQuadrant()\r\n    \r\n    setTimeout(() => player.start(), 500)\r\n\r\n\r\n    /** UI */\r\n    createInfo(emitter)\r\n    showStartButton(emitter)\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => loadAssets(ASSETS_TO_LOAD).then(init))\r\n","import { pr } from '../componentsReact/App'\r\nimport { clickFullScreen } from '../store/actions'\r\n\r\n\r\n\r\nconst MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport function createDeviceResizer (emitter) {\r\n\r\n    const appWrapper = document.querySelector('.app-wrapper')\r\n    emitter.subscribe('mouseDown')(key => {\r\n        if (key === 'butt-fullscreen') openAppFullScreenIfMobile()\r\n    })\r\n\r\n    /** fullscreen */\r\n    const openAppFullScreenIfMobile = () => {\r\n\r\n\r\n        if (appWrapper.requestFullscreen) {\r\n            appWrapper.requestFullscreen()\r\n        } else if (appWrapper.mozRequestFullScreen) {\r\n            appWrapper.mozRequestFullScreen()\r\n        } else if (appWrapper.webkitRequestFullscreen) {\r\n            appWrapper.webkitRequestFullscreen()\r\n        } else if (appWrapper.msRequestFullscreen) {\r\n            appWrapper.msRequestFullscreen()\r\n        }\r\n    }\r\n\r\n    /** resize */\r\n    const resize = e => {\r\n        appWrapper.style.width = window.innerWidth + 'px'\r\n        appWrapper.style.height = window.innerHeight + 'px'\r\n        appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n        if (!document.fullscreenElement) {\r\n            clickFullScreen(pr.dispatch).exitFullScreen()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n}\r\n\r\n\r\n\r\nconst checkTouch = () => \r\n    navigator.maxTouchPoints || 'ontouchstart' in document.documentElement\r\n\r\n\r\n\r\nconst checkIsCanOrientation = () => \r\n    typeof window.orientation !== 'undefined'\r\n\r\n","import * as R from 'ramda'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport function createFrameUpdater (eventEmitter) {\r\n\r\n    const emitFrameUpdate = eventEmitter.emit(FRAME_UPDATE)\r\n\r\n    let data = {\r\n        time: 0,\r\n        delta: 0,\r\n        count: 0,\r\n        oldTime: 0\r\n    }\r\n\r\n    const getDataFromGlobalVar = () => data\r\n\r\n    const updateTime = data => { \r\n        data.time = Date.now()\r\n        return data\r\n    }\r\n\r\n    const updateDelta = data => { \r\n        data.delta = (data.time - data.oldTime) * 0.001\r\n        if (isNaN(data.delta) || data.delta > 1000 || data.delta == 0 ) {\r\n            data.delta = 1000/60 * 0.001;\r\n        }\r\n        return data\r\n    }\r\n\r\n    const updateCount = data => { \r\n        data.count = data.delta / (1/60)\r\n        return data\r\n    }\r\n\r\n    const emit = data => { \r\n        emitFrameUpdate(data)\r\n        return data\r\n    }\r\n\r\n    const updateOldTime = data => { \r\n        data.oldTime = data.time\r\n        return data\r\n    }\r\n\r\n    const saveDataInGlobalVar = dataFromChine => {\r\n        data = dataFromChine\r\n        return data\r\n    }\r\n\r\n    const logger = data => {\r\n        console.log(data)\r\n        return data\r\n    } \r\n\r\n    const update = R.pipe(\r\n        getDataFromGlobalVar,\r\n        updateTime,\r\n        updateDelta,\r\n        updateCount, \r\n        emit, \r\n        updateOldTime, \r\n        saveDataInGlobalVar\r\n    )\r\n\r\n    const animate = () => {\r\n        requestAnimationFrame(animate)\r\n        update(data)\r\n    }\r\n\r\n    animate() \r\n}\r\n\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport {\r\n    studioConfig,\r\n} from '../constants/constants_elements'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\r\nimport { Saturate } from '../shaders/saturate'\r\n\r\n\r\n\r\n\r\n\r\nexport function createStudio (emitter, assets, store) {\r\n    const { canId, rendererCon, clearColor, fogData, amb } = studioConfig\r\n\r\n    const canvas = document.getElementById(canId)\r\n    rendererCon.canvas = canvas\r\n\r\n    const renderer = new THREE.WebGLRenderer(rendererCon)\r\n    renderer.setClearColor(clearColor)\r\n    renderer.setPixelRatio(window.devicePixelRatio)\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n    const scene = new THREE.Scene()\r\n\r\n    {\r\n        const { color, fogNear, fogFar, backgroundImgKey } = store.getState().app.sceneEnvironment\r\n        scene.background = assets[backgroundImgKey] || null\r\n        scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n    }\r\n\r\n\r\n    let lightA\r\n    {\r\n        const { color, strength } = amb\r\n        lightA = new THREE.AmbientLight( color, strength )\r\n        scene.add( lightA )\r\n    }\r\n\r\n    let camera = null\r\n\r\n\r\n    const composer = new EffectComposer(renderer)\r\n    //composer.addPass(new RenderPass(scene, camera))\r\n\r\n\r\n\r\n    const resize = () => {\r\n        const size = { width: window.innerWidth, height: window.innerHeight }\r\n        renderer.setSize(size.width, size.height)\r\n        composer.setSize(size.width, size.height)\r\n        if (camera) {\r\n            camera.aspect = size.width/size.height\r\n            camera.updateProjectionMatrix()\r\n        }\r\n    }\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n\r\n\r\n\r\n\r\n    const addToScene = scene.add.bind(scene)\r\n    //const drawFrame = () => camera && renderer.render(scene, camera)\r\n    const drawFrame = () => camera && composer.render(scene, camera)\r\n    emitter.subscribe(FRAME_UPDATE)(drawFrame)\r\n\r\n\r\n\r\n    \r\n\r\n    let\r\n        oldFogNear = scene.fog.near,\r\n        oldFogFar = scene.fog.far,\r\n        oldColor = scene.fog.color,\r\n        oldBackgroundImgKey = store.getState().app.sceneEnvironment.backgroundImgKey\r\n\r\n\r\n\r\n\r\n    store.subscribe(() => {\r\n        const newState = store.getState()\r\n        const { fogNear, fogFar, color, backgroundImgKey } = newState.app.sceneEnvironment\r\n        if (fogNear !== oldFogNear || fogFar !== oldFogFar || color !== oldColor ) {\r\n            let startData = {\r\n                color: scene.fog.color,\r\n                near: scene.fog.near,\r\n                far: scene.fog.far,\r\n            }\r\n            let endData = {\r\n                color: new THREE.Color(color),\r\n                near: fogNear,\r\n                far: fogFar,\r\n            }\r\n\r\n            oldFogNear = fogNear\r\n            oldFogFar = fogFar\r\n            oldColor = color\r\n\r\n            new TWEEN.Tween(startData)\r\n                .to(endData, 3000)\r\n                .onUpdate(() => {\r\n                    scene.fog.color = startData.color\r\n                    scene.fog.near = startData.near\r\n                    scene.fog.far = startData.far\r\n                    lightA.color = startData.color\r\n                    renderer.setClearColor(startData.color)\r\n                })\r\n                .start()\r\n        }\r\n\r\n\r\n        if (backgroundImgKey !== oldBackgroundImgKey) {\r\n            scene.background = assets[backgroundImgKey] || null\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return {\r\n        setCamera: cam => {\r\n\r\n            camera = cam\r\n            composer.addPass(new RenderPass(scene, cam))\r\n            composer.addPass(new ShaderPass(Saturate))\r\n\r\n        },\r\n        addToScene,\r\n    }\r\n}\r\n\r\n","import { t } from '../helpers/util_translate'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function createInfo () {\r\n    const cont = document.createElement('div')\r\n    cont.style.display = 'none'\r\n    cont.classList.add('info-cont')\r\n\r\n    const wrapper = document.createElement('div')\r\n    wrapper.classList.add('info-wrap')\r\n    cont.appendChild(wrapper)\r\n\r\n    const mess = document.createElement('div')\r\n    const createInnerMess = () => {\r\n        mess.innerHTML = t('Previous part \"Factory\": ')\r\n        mess.innerHTML += `<a href=\\'http://js.otrisovano.ru${ t('/bridge') }\\' target=\"blanck\">${ t('link') }</a></br>`\r\n        mess.innerHTML += t('Author: ')\r\n        mess.innerHTML += `<a href=\\'http://otrisovano.ru\\' target=\"blanck\">${ t('link') }</a></br>`\r\n        mess.innerHTML += t('Github: ')\r\n        mess.innerHTML += `<a href=\\'https://github.com/fire888/levels\\' target=\"blanck\">${ t('link') }</a></br>`\r\n    }\r\n    createInnerMess()\r\n    wrapper.appendChild(mess)\r\n\r\n    const closeButt = document.createElement('button')\r\n    closeButt.classList.add('control')\r\n    closeButt.innerText = 'x'\r\n    closeButt.addEventListener('click', () => {\r\n        cont.style.display = 'none'\r\n    })\r\n    wrapper.appendChild(closeButt)\r\n    document.querySelector('.butt-info').addEventListener('click', () => {\r\n        cont.style.display = 'flex'\r\n    })\r\n\r\n    document.querySelector('.app-wrapper').appendChild(cont)\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}