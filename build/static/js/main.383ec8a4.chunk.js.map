{"version":3,"sources":["helpers/util_keyBoard.js","helpers/util_emitter.js","assets/skybox/px.jpg","assets/skybox/nx.jpg","assets/skybox/py.jpg","assets/skybox/ny.jpg","assets/skybox/pz.jpg","assets/skybox/nz.jpg","assets/matIronBox/posx.jpg","assets/matIronBox/negx.jpg","assets/matIronBox/posy.jpg","assets/matIronBox/negy.jpg","assets/matIronBox/posz.jpg","assets/matIronBox/negz.jpg","assets/map-walls-bump.png","assets/level-rooms.obj","assets/floor_outer_map.jpg","assets/botMap.png","constants/constants_elements.js","assets/botAnim.glb","helpers/utils_loadAssets.js","helpers/createActionByChangedQuadrant.js","helpers/helper_prepareMeshesFromAssets.js","components/component_collisionFloor.js","components/component_collisionWalls.js","components/component_checkNearItem.js","entities/createPlayer.js","systems/systemHtml_intro.js","constants/constants_replicies.js","systems/systemHtml_info.js","systems/system_level.js","entities/Bot.js","helpers/util_GLTFcopy.js","store/actions.js","componentsReact/UserReplicies.js","componentsReact/BotAnswers.js","componentsReact/App.js","systems/system_bots.js","store/createStore.js","index.js","helpers/util_deviceResizer.js","helpers/util_frameUpater.js","entities/createStudio.js"],"names":["KeyBoard","eventEmitter","emitter","keys","keyUpdate","keyCode","isDown","emit","document","addEventListener","event","bind","this","buttLeft","querySelector","buttRight","buttUp","getOrCreateArrFromObj","obj","key","storage","id","data","forEach","action","subscribe","callback","push","filter","item","showAll","s","length","console","log","createEmitter","ASSETS_TO_LOAD","type","filename","levelRoomsSrc","px","pxjpg","nx","nxjpg","py","pyjpg","ny","nyjpg","pz","pzjpg","nz","nzjpg","pxjpg2","nxjpg2","pyjpg2","nyjpg2","pzjpg2","nzjpg2","botMap","mapBump","mapFloorOuter","wrap","MATERIALS_CONFIG","mat","props","color","emissive","specular","shininess","bumpMap","bumpScale","envMap","reflectivity","map","skinning","S","FRAME_UPDATE","FLOORS_CONF","fogNear","fogFar","CHANGE_LAYER_STATE","oldState","newState","oldQuadrant","newQuadrant","emitData","emitKey","environmentMode","backgroundImg","counter","val","studioConfig","canId","rendererCon","antialias","clearColor","backgroundColor","amb","strength","playerConfig","speed","speedRot","speedDown","offsetFromFloor","offsetFromFloorFactor","offsetWallCollision","level","startRot","startPos","cameraData","fov","ratio","window","innerWidth","innerHeight","near","far","pos","frontObjPos","lightDataOne","lightDataTwo","objLoader","textureLoader","gltfLoader","cubeTextureLoader","levelState","getEmitsByChangeQuadrant","playerOldQ","playerNewQ","i","getData","conf","createCheckerNewQuadrant","update","x","y","z","currentQuadrant","Math","floor","isChanged","dataToLoad","assets","index","loadAsset","load","model","checkComplete","result","createMaterials","wrapS","wrapT","THREE","mapsKeys","materials","keyMap","FLOORS_ARRAY","setItemToFloorsCollision","removeItemFromFloorsCollision","mesh","WALLS_ARRAY","setItemToWallCollision","removeItemFromWallCollision","arrItems","createPlayer","emitterLink","camera","isButtonsDisabled","isBlocked","mainObj","position","fromArray","rotation","frontObj","add","strenth","light","checkFloors","objFromLink","offset","delta","objFrom","vec3Src","vec3Ray","isDisable","check","updateData","copy","intersectsFloor","intersectObjects","distance","count","point","start","createComponentCollisionFloors","checkWalls","objToLink","objTo","vec3Src2","vec3Ray2","getWorldPosition","sub","intersectsWalls","createComponentCollisionWalls","checkNearItem","distanceTo","userData","nearPlayer","toNear","createCheckerNearItem","translateZ","isOpen","getObj","getCamera","setToPos","set","loader","offsetLoader","isAnimateLoader","loaderTimeOut","setTimeout","style","marginLeft","REPLICIES","q","a","TRANSLATE_WORLDS","currentLanguage","t","STANDART_ROOMS","START_ROOMS","OFFSETS","Bot","inScene","_state","_targetAngle","container","_modelGroup","random","PI","_objFrom","_objTo","gltf","clone","animations","scene","skinnedMeshes","traverse","node","isSkinnedMesh","name","cloneBones","cloneSkinnedMeshes","isBone","skeleton","cloneSkinnedMesh","orderedCloneBones","bones","cloneBone","boneInverses","matrixWorld","GLTFCopy","botScene","children","material","botMaterial","_animations","_mixer","_walkAction","clipAction","play","_componentCollision","_updateState","_collisionMeshes","visible","lookAt","_startRotate","abs","_startGo","arrWalls","intersectObject","toggleDialog","dispatch","is","isDialog","toggleButtonDialog","isButtonDialog","UserReplicies","connect","state","userReplicies","app","className","onClick","BotAnswers","botAnswers","pr","appData","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","appWrapper","fullScreenButton","fullscreenElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","resize","e","width","height","fontSize","max","min","display","createDeviceResizer","init","emitFrameUpdate","time","oldTime","R","Date","now","isNaN","dataFromChine","animate","requestAnimationFrame","createFrameUpdater","TWEEN","studio","canvas","renderer","setClearColor","setPixelRatio","devicePixelRatio","setSize","background","skyBox","lightA","fog","size","aspect","updateProjectionMatrix","addToScene","startData","endData","to","onUpdate","setCamera","cam","createStudio","player","rooms","allMeshes","collisionsBotsRooms","child","includes","geometry","green","road","prepareMeshesFromAssets","group","objRooms","createRoom","kv","instanceKey","objKey","typeLevelChange","isAddBot","removeRoom","remove","isRemoveBot","startL","l","wentLevels","flagIsSpecial","direction","keyCreateRoom","oldKv","curKv","createLevel","systemBots","iron","bot","groupBots","arrBots","setCollisionMesh","removeCollisionMesh","botWorldPos","prepareToSay","createSystemBots","checkerNewQuadrant","arrEmitData","createActionByChangedQuadrant","cont","createElement","classList","wrapper","appendChild","mess","createInnerMess","innerHTML","closeButt","innerText","keyLanguage","createInfo","startButtons","progressWrapper","target","dataset","lang","showStartButton","Promise","resolve","OBJLoader","GLTFLoader","then"],"mappings":"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","file":"static/js/main.383ec8a4.chunk.js","sourcesContent":["\r\n\r\nexport function KeyBoard (eventEmitter) {\r\n    \r\n    const emitter = eventEmitter\r\n\r\n    const keys = {\r\n        'up': false,\r\n        'left': false,\r\n        'right': false,\r\n        's': false,\r\n        'm': false,\r\n        'w': false,\r\n    }\r\n\r\n    const keyUpdate = function ( keyCode, isDown ) {\r\n        switch( keyCode ) {\r\n          case 38:\r\n            keys['up'] = isDown\r\n            break\r\n          case 37:\r\n            keys['left'] = isDown\r\n            break\r\n          case 39:\r\n            keys['right'] = isDown\r\n            break\r\n          case 83:\r\n            keys['s'] = isDown\r\n            break\r\n          case 77:\r\n            keys['m'] = isDown\r\n            break\r\n          case 87:\r\n            keys['w'] = isDown\r\n            break\r\n        }\r\n        emitter.emit('keyEvent')(keys)\r\n    }\r\n\r\n    document.addEventListener( 'keydown', \r\n      function (event) { keyUpdate( event.keyCode, true )}.bind(this) )\r\n    document.addEventListener( 'keyup', \r\n      function(event) { keyUpdate( event.keyCode, false )}.bind(this) )\r\n\r\n    const buttLeft = document.querySelector('.butt-left')\r\n    buttLeft.addEventListener('mousedown', \r\n      function() { keyUpdate( 37, true ) })\r\n    buttLeft.addEventListener('mouseup', \r\n      function() { keyUpdate( 37, false ) })   \r\n    buttLeft.addEventListener('touchstart',\r\n        function() { keyUpdate( 37, true ) })\r\n    buttLeft.addEventListener('touchend', \r\n        function() { keyUpdate( 37, false ) })       \r\n    \r\n    const buttRight = document.querySelector('.butt-right')\r\n    buttRight.addEventListener('mousedown', \r\n      function() { keyUpdate( 39, true ) })\r\n    buttRight.addEventListener('mouseup', \r\n      function() { keyUpdate( 39, false ) })\r\n    buttRight.addEventListener('touchstart', \r\n      function() { keyUpdate( 39, true ) })\r\n    buttRight.addEventListener('touchend', \r\n      function() { keyUpdate( 39, false ) })         \r\n        \r\n    const buttUp = document.querySelector('.butt-front')\r\n    buttUp.addEventListener('mousedown', \r\n      function() { keyUpdate( 38, true ) })\r\n    buttUp.addEventListener('mouseup', \r\n      function() { keyUpdate( 38, false ) })\r\n    buttUp.addEventListener('touchstart', \r\n      function() { keyUpdate( 38, true ) })\r\n    buttUp.addEventListener('touchend', \r\n      function() { keyUpdate( 38, false ) })\r\n}\r\n\r\n","let eventEmitter = null\r\n\r\nconst createEmitter = () => {\r\n    const storage = {}\r\n    return {\r\n        emit: id => data => getOrCreateArrFromObj(storage)(id).forEach(action => action(data)),\r\n        subscribe: id => callback => {\r\n            getOrCreateArrFromObj(storage)(id).push(callback)\r\n            return () => storage[id] = storage[id].filter(item => item !== callback)\r\n        },\r\n        showAll () {\r\n            const s = {}\r\n            for (let key in storage) {\r\n                s[key] = storage[key].length\r\n            }\r\n            console.log(s)\r\n        },\r\n    }\r\n}\r\n\r\nconst getOrCreateArrFromObj = obj => key => obj[key] = obj[key] || []\r\n\r\nexport const emitter = eventEmitter = eventEmitter || createEmitter()\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/px.2be78f43.jpg\";","export default __webpack_public_path__ + \"static/media/nx.b2401269.jpg\";","export default __webpack_public_path__ + \"static/media/py.659ebc34.jpg\";","export default __webpack_public_path__ + \"static/media/ny.462f1251.jpg\";","export default __webpack_public_path__ + \"static/media/pz.8ea5ba14.jpg\";","export default __webpack_public_path__ + \"static/media/nz.7f255b96.jpg\";","export default __webpack_public_path__ + \"static/media/posx.be2d83a2.jpg\";","export default __webpack_public_path__ + \"static/media/negx.d016c8e7.jpg\";","export default __webpack_public_path__ + \"static/media/posy.01cfd221.jpg\";","export default __webpack_public_path__ + \"static/media/negy.f01f8356.jpg\";","export default __webpack_public_path__ + \"static/media/posz.ef37b8e1.jpg\";","export default __webpack_public_path__ + \"static/media/negz.f346a80a.jpg\";","export default __webpack_public_path__ + \"static/media/map-walls-bump.40f05869.png\";","export default __webpack_public_path__ + \"static/media/level-rooms.6513b781.obj\";","export default __webpack_public_path__ + \"static/media/floor_outer_map.35e50f6e.jpg\";","export default __webpack_public_path__ + \"static/media/botMap.972e276e.png\";","import { DoubleSide } from 'three'\r\n\r\n//import '../assets/start-img.png'\r\n//import '../../public/progress-img.png'\r\n\r\nimport pxjpg from '../assets/skybox/px.jpg'\r\nimport nxjpg from '../assets/skybox/nx.jpg'\r\nimport pyjpg from '../assets/skybox/py.jpg'\r\nimport nyjpg from '../assets/skybox/ny.jpg'\r\nimport pzjpg from '../assets/skybox/pz.jpg'\r\nimport nzjpg from '../assets/skybox/nz.jpg'\r\n\r\nimport pxjpg2 from '../assets/matIronBox/posx.jpg'\r\nimport nxjpg2 from '../assets/matIronBox/negx.jpg'\r\nimport pyjpg2 from '../assets/matIronBox/posy.jpg'\r\nimport nyjpg2 from '../assets/matIronBox/negy.jpg'\r\nimport pzjpg2 from '../assets/matIronBox/posz.jpg'\r\nimport nzjpg2 from '../assets/matIronBox/negz.jpg'\r\n\r\nimport mapBump from '../assets/map-walls-bump.png'\r\nimport levelRoomsSrc from '../assets/level-rooms.obj'\r\nimport mapFloorOuter from '../assets/floor_outer_map.jpg'\r\n\r\nimport botMap from '../assets/botMap.png'\r\nimport botSrc from '../assets/botAnim.glb'\r\n\r\n\r\n\r\n\r\nexport const ASSETS_TO_LOAD = [\r\n    {\r\n        type: 'obj',\r\n        filename: levelRoomsSrc,\r\n        key: 'level-rooms'\r\n    }, {\r\n        type: 'glb',\r\n        filename: botSrc,\r\n        key: 'bot'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg, nx: nxjpg, py: pyjpg, ny: nyjpg, pz: pzjpg, nz: nzjpg, },\r\n        key: 'skyBox'\r\n    }, {\r\n        type: 'cubeTextures',\r\n        filename: { px: pxjpg2, nx: nxjpg2, py: pyjpg2, ny: nyjpg2, pz: pzjpg2, nz: nzjpg2, },\r\n        key: 'ironEnv',\r\n    }, {\r\n        type: 'img',\r\n        filename: botMap,\r\n        key: 'botMap',\r\n    }, {\r\n        type: 'img',\r\n        filename: mapBump,\r\n        key: 'bumpWalls',\r\n    }, {\r\n        type: 'img',\r\n        filename: mapFloorOuter,\r\n        key: 'mapFloorOuter',\r\n        wrap: true,\r\n},]\r\n\r\n\r\n\r\n\r\nexport const MATERIALS_CONFIG = {\r\n    'wall': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'bumpWalls',\r\n            bumpScale: 0.1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n            map: 'bumpWalls',\r\n        },\r\n    },\r\n    'iron': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xffffff,\r\n            emissive: 0x003388,\r\n            specular: 0xffffff,\r\n            shininess: 60,\r\n            bumpMap: 'botMap',\r\n            bumpScale: 0.1,\r\n            envMap: 'ironEnv',\r\n            reflectivity: 0.5,\r\n            map: 'botMap',\r\n            skinning: true,\r\n        },\r\n    },\r\n    'green': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0x004466,\r\n            emissive: 0xffffff,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    },\r\n    'road': {\r\n        mat: 'MeshPhongMaterial',\r\n        props: {\r\n            color: 0xa1129f,\r\n            emissive: 0xa1129f,\r\n            map: 'mapFloorOuter',\r\n            bumpMap: 'mapFloorOuter',\r\n            bumpScale: 1,\r\n            envMap: 'skyBox',\r\n            reflectivity: 0.5,\r\n        },        \r\n    } \r\n}\r\n\r\n\r\n\r\n\r\n/** size element */\r\nexport const S = 175.335\r\nexport const H = 70\r\n\r\n\r\n\r\n/** emitter constants */\r\nexport const FRAME_UPDATE = 'FRAME_UPDATE'\r\n\r\n\r\n\r\n\r\nexport const FLOORS_CONF = {\r\n    '-2': {\r\n        'outer': { fogNear: -200, fogFar: 500, color: 0x18257d },\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x8805a8 },\r\n    },\r\n\r\n   \r\n\r\n    '-1': {\r\n        'outer': { fogNear: 20, fogFar: 500, color: 0x18257d },\r\n        'firstRoomLight': { fogNear: -40, fogFar: 150, color: 0x00235e},\r\n        'corridorLight': { fogNear: -40, fogFar: 150, color: 0x6b006c },\r\n        'default': { fogNear: -40, fogFar: 150, color: 0x2e118b },\r\n    },\r\n\r\n\r\n    '0': { 'default': { fogNear: -40, fogFar: 150, color: 0x3c4900 }, },\r\n\r\n    \r\n    '1': { 'default': { fogNear: -40, fogFar: 150, color: 0x0e3e52 }, },\r\n\r\n\r\n    '2': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a1763 }, },\r\n\r\n\r\n    '3': { 'default': { fogNear: 0, fogFar: 80, color: 0x0a6340 }, },\r\n\r\n\r\n    '4': { 'default': { fogNear: 0, fogFar: 80, color: 0xac0000 }, },\r\n}\r\n\r\n\r\n\r\n//const MAX_CHANGED_LEVELS = 5\r\n\r\nexport const START_LAYER_STATE = 'outer'\r\n//export const START_LAYER_STATE = 'corridor'\r\n\r\nexport const CHANGE_LAYER_STATE = [\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'outer', newState: 'corridor',\r\n        oldQuadrant: [0, -2, 4], newQuadrant: [0, -2, 3],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n            {\r\n                emitKey: 'toggleImgSceneBack',\r\n                backgroundImg: false,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'corridor', newState: 'outer',\r\n        oldQuadrant: [0, -2, 3], newQuadrant: [0, -2, 4],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'outer',\r\n            },\r\n        ]\r\n    },\r\n\r\n    /** ********************************************************/\r\n    {\r\n        oldState: 'corridor', newState: 'firstRoom',\r\n        oldQuadrant: [0, -1, 2], newQuadrant: [0, -1, 1],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'firstRoomLight',\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'corridor',\r\n        oldQuadrant: [0, -1, 1], newQuadrant: [0, -1, 2],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'corridorLight',\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: [0, -1, 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'destroyStartCorridor'\r\n            },\r\n            {\r\n                 emitKey: 'changeLevel'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_MINUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'destroyStartCorridor'\r\n            },\r\n            {\r\n                 emitKey: 'changeLevel'\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        oldState: 'firstRoom', newState: 'playLevel',\r\n        oldQuadrant: [0, -1, 0], newQuadrant: ['ANY_PLUS_ONE', -1, 0],\r\n        emitData: [\r\n            {\r\n                emitKey: 'destroyStartCorridor'\r\n            },\r\n            {\r\n                emitKey: 'changeLevel'\r\n            },\r\n        ],\r\n    },\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_PLUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'changeLevel',\r\n                counter: () => 0,\r\n            }\r\n        ],\r\n    },\r\n\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY_MINUS_ONE', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeEnvironment',\r\n                environmentMode: 'default',\r\n            },\r\n            {\r\n                emitKey: 'changeLevel',\r\n            }\r\n        ],\r\n    },\r\n\r\n\r\n    /** ********************************************************/\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_MINUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeLevel',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_MINUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeLevel',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY_PLUS_ONE', 'ANY', 'ANY'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeLevel',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n\r\n    {\r\n        oldState: 'playLevel', newState: 'playLevel',\r\n        oldQuadrant: ['ANY', 'ANY', 'ANY'], newQuadrant: ['ANY', 'ANY', 'ANY_PLUS_ONE'],\r\n        emitData: [\r\n            {\r\n                emitKey: 'changeLevel',\r\n                counter: val => ++val,\r\n            },\r\n        ],\r\n    },\r\n]\r\n\r\n\r\n\r\n\r\n\r\nexport const studioConfig = {\r\n    canId: 'webgl-canvas',\r\n    rendererCon: {\r\n        antialias: true\r\n    },\r\n    clearColor: FLOORS_CONF[-1]['outer'].color,\r\n    backgroundColor: FLOORS_CONF[-1]['outer'].color,\r\n    amb: {\r\n        color: FLOORS_CONF[-1]['outer'].color,\r\n        strength: 0.8,\r\n    },\r\n}\r\n\r\n\r\nexport const playerConfig = {\r\n    //speed: 0.35,\r\n    speed: 0.8,\r\n    speedRot: 0.02,\r\n    speedDown: -0.25,\r\n    offsetFromFloor: 10.0,\r\n    offsetFromFloorFactor: 0.5,\r\n    offsetWallCollision: 3.5,\r\n    level: -13,\r\n    startRot: [0, 0, 0],\r\n    startPos: [100, -60, 1000],\r\n    //startPos: [90, -10, 360.7140705920112], // beginPlay\r\n    cameraData: {\r\n        fov: 90,\r\n        ratio: window.innerWidth / window.innerHeight,\r\n        near: 0.1,\r\n        far: 1000,\r\n        pos: [0, 2, -0.5],\r\n    },\r\n    frontObjPos: [0, 0, -1],\r\n    lightDataOne: {\r\n        color: 0xc2d4f3,\r\n        strength: 0.5,\r\n        pos: [0, 100, 0],\r\n    },\r\n    lightDataTwo: {\r\n        color: 0xff0000, \r\n        strength: 0.4,\r\n        pos: [0, -30, 40],\r\n    },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/botAnim.5bfca6de.glb\";","import * as THREE from 'three'\r\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\r\nimport { GLTFLoader } from  'three/examples/jsm/loaders/GLTFLoader'\r\n\r\n\r\n\r\nlet callback = null\r\nlet dataToLoad = null\r\nconst assets = {}\r\nlet objLoader, textureLoader, gltfLoader, cubeTextureLoader\r\nlet index = 0\r\n\r\n\r\n\r\nconst loadAsset = function (data) {\r\n    if (data.type === 'obj') {\r\n        objLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'glb' || data.type === 'gltf') {\r\n        gltfLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }        \r\n    if (data.type === 'img') {\r\n        textureLoader.load(data.filename, model => {\r\n            assets[data.key] = model\r\n            checkComplete()        \r\n        })\r\n    }\r\n    if (data.type === 'cubeTextures') {\r\n        cubeTextureLoader.load(\r\n            [\r\n                data.filename['px'],\r\n                data.filename['nx'],\r\n                data.filename['py'],\r\n                data.filename['ny'],\r\n                data.filename['pz'],\r\n                data.filename['nz'],\r\n            ],\r\n            result => {\r\n                assets[data.key] = result\r\n                checkComplete()\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst checkComplete = () => {\r\n    index ++\r\n    index < dataToLoad.length \r\n        ? loadAsset(dataToLoad[index])\r\n        : callback(assets)\r\n}\r\n\r\n\r\n\r\nexport const loadAssets = data => {\r\n    return new Promise(resolve => {\r\n        dataToLoad = data\r\n        callback = resolve\r\n        index = 0\r\n\r\n        objLoader = objLoader || new OBJLoader()\r\n        textureLoader = textureLoader || new THREE.TextureLoader()\r\n        gltfLoader = gltfLoader || new GLTFLoader()\r\n        cubeTextureLoader = cubeTextureLoader || new THREE.CubeTextureLoader()\r\n\r\n        loadAsset(dataToLoad[index])\r\n    })\r\n}\r\n\r\n","import { emitter } from './util_emitter'\r\nimport {\r\n    START_LAYER_STATE,\r\n    CHANGE_LAYER_STATE,\r\n} from '../constants/constants_elements'\r\nimport { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\nexport const createActionByChangedQuadrant = () => {\r\n    const checkerNewQuadrant = createCheckerNewQuadrant()\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        const data = checkerNewQuadrant.update(pos)\r\n        const { currentQuadrant, oldQuadrant, isChanged } = data\r\n\r\n        if (!isChanged) return;\r\n\r\n        const arrEmitData = getEmitsByChangeQuadrant(oldQuadrant, currentQuadrant)\r\n\r\n        arrEmitData.length &&\r\n            arrEmitData.forEach(item => emitter.emit(item.emitKey)(item))\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet levelState = START_LAYER_STATE\r\n\r\n\r\nexport const getEmitsByChangeQuadrant = (playerOldQ, playerNewQ) => {\r\n    for (let i = 0; i < CHANGE_LAYER_STATE.length; ++i) {\r\n        const data = getData(\r\n            [...playerOldQ],\r\n            [...playerNewQ],\r\n            {\r\n                ...CHANGE_LAYER_STATE[i],\r\n                oldQuadrant: [...CHANGE_LAYER_STATE[i].oldQuadrant],\r\n                newQuadrant: [...CHANGE_LAYER_STATE[i].newQuadrant],\r\n            }\r\n        )\r\n        if (data) return data;\r\n    }\r\n    return { levelState }\r\n}\r\n\r\n\r\n\r\n\r\nconst getData = (playerOldQ, playerNewQ, conf) => {\r\n    const { oldState, newState, oldQuadrant, newQuadrant, emitData } = conf\r\n\r\n    if (levelState !== oldState)\r\n        return;\r\n\r\n\r\n    if (oldQuadrant[0] === 'ANY') oldQuadrant[0] = playerOldQ[0]\r\n    if (oldQuadrant[1] === 'ANY') oldQuadrant[1] = playerOldQ[1]\r\n    if (oldQuadrant[2] === 'ANY') oldQuadrant[2] = playerOldQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY') newQuadrant[0] = playerNewQ[0]\r\n    if (newQuadrant[1] === 'ANY') newQuadrant[1] = playerNewQ[1]\r\n    if (newQuadrant[2] === 'ANY') newQuadrant[2] = playerNewQ[2]\r\n\r\n    if (newQuadrant[0] === 'ANY_PLUS_ONE') newQuadrant[0] = playerOldQ[0] + 1\r\n    if (newQuadrant[1] === 'ANY_PLUS_ONE') newQuadrant[1] = playerOldQ[1] + 1\r\n    if (newQuadrant[2] === 'ANY_PLUS_ONE') newQuadrant[2] = playerOldQ[2] + 1\r\n\r\n    if (newQuadrant[0] === 'ANY_MINUS_ONE') newQuadrant[0] = playerOldQ[0] - 1\r\n    if (newQuadrant[1] === 'ANY_MINUS_ONE') newQuadrant[1] = playerOldQ[1] - 1\r\n    if (newQuadrant[2] === 'ANY_MINUS_ONE') newQuadrant[2] = playerOldQ[2] - 1\r\n\r\n\r\n    if (\r\n        oldQuadrant[0] !== playerOldQ[0] ||\r\n        oldQuadrant[1] !== playerOldQ[1] ||\r\n        oldQuadrant[2] !== playerOldQ[2] ||\r\n        newQuadrant[0] !== playerNewQ[0] ||\r\n        newQuadrant[1] !== playerNewQ[1] ||\r\n        newQuadrant[2] !== playerNewQ[2]\r\n    ) return;\r\n\r\n\r\n    levelState = newState\r\n\r\n    return emitData.map(item => ({\r\n        ...item,\r\n        levelState,\r\n        oldQuadrant: [...oldQuadrant],\r\n        newQuadrant: [...newQuadrant],\r\n    }))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst createCheckerNewQuadrant = function () {\r\n    let oldQuadrant = []\r\n\r\n    return {\r\n        update ({ x, y, z}) {\r\n            const currentQuadrant = [Math.floor(x / S), Math.floor(y / H), Math.floor(z / S)]\r\n\r\n            if (\r\n                currentQuadrant[0] !== oldQuadrant[0] ||\r\n                currentQuadrant[1] !== oldQuadrant[1] ||\r\n                currentQuadrant[2] !== oldQuadrant[2]\r\n            ) {\r\n                const data = {\r\n                    isChanged: true,\r\n                    currentQuadrant,\r\n                    oldQuadrant,\r\n                }\r\n                oldQuadrant = [...currentQuadrant]\r\n\r\n                return data\r\n            } else {\r\n                return { isChanged: false }\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { MATERIALS_CONFIG } from '../constants/constants_elements'\r\nimport * as THREE from 'three'\r\n\r\n\r\n\r\nexport function prepareMeshesFromAssets (assets) {\r\n    const\r\n        materials = createMaterials(assets),\r\n        rooms = {},\r\n        allMeshes = {}\r\n\r\n    assets.collisionsBotsRooms = {}\r\n\r\n    assets['level-rooms'].traverse(child => {\r\n        if (child.name.includes(\"room_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            rooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"collision_\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            assets.collisionsBotsRooms[child.name] = mesh\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_walls\")) {\r\n            const mesh = new THREE.Mesh(child.geometry)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_road\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.green)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }\r\n        if (child.name.includes(\"outer_floor\")) {\r\n            const mesh = new THREE.Mesh(child.geometry, materials.road)\r\n            mesh.name = child.name\r\n            allMeshes[child.name] = mesh\r\n        }  \r\n    })\r\n\r\n    return {\r\n        rooms,\r\n        allMeshes,\r\n        materials,\r\n    }\r\n}\r\n\r\n\r\n\r\nconst createMaterials = assets => {\r\n    for (let key in assets) \r\n        assets[key].wrapS && (assets[key].wrapS = assets[key].wrapT = THREE.RepeatWrapping)\r\n\r\n    const mapsKeys = ['bumpMap', 'envMap', 'map']\r\n    const materials = {}\r\n    for (let key in MATERIALS_CONFIG) {\r\n        materials[key] = new THREE[MATERIALS_CONFIG[key].mat]({\r\n            ...MATERIALS_CONFIG[key].props\r\n        })\r\n        mapsKeys.map(keyMap =>\r\n            MATERIALS_CONFIG[key].props[keyMap] &&\r\n                (materials[key][keyMap] = assets[MATERIALS_CONFIG[key].props[keyMap]])\r\n        )\r\n    }\r\n    return materials\r\n}\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet FLOORS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionFloors = (objFromLink, offset, delta, speed) => {\r\n    const objFrom = objFromLink\r\n    const offsetFromFloor = offset\r\n    const offsetFromFloorFactor = delta\r\n    const speedDown = speed\r\n\r\n    const vec3Src = new THREE.Vector3()\r\n    const vec3Ray = new THREE.Vector3(0, -1, 0)\r\n\r\n    let isDisable = true\r\n\r\n    return {\r\n        check: updateData => {\r\n            if (isDisable) return;\r\n\r\n            vec3Src.copy(objFrom.position)\r\n            const raycasterDown = new THREE.Raycaster(vec3Src, vec3Ray)\r\n            const intersectsFloor = raycasterDown.intersectObjects(FLOORS_ARRAY)\r\n            if ( intersectsFloor && intersectsFloor[0] && intersectsFloor[0].distance > offsetFromFloor + offsetFromFloorFactor) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            }\r\n            if (intersectsFloor && !intersectsFloor[0]) {\r\n                objFrom.position.y += speedDown * updateData.count\r\n                return;\r\n            } \r\n            objFrom.position.y = intersectsFloor[0].point.y + offsetFromFloor\r\n        },\r\n        start: () => {\r\n            isDisable = false\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToFloorsCollision = item => FLOORS_ARRAY.push(item)\r\nexport const removeItemFromFloorsCollision = item => FLOORS_ARRAY = FLOORS_ARRAY.filter(mesh => mesh !== item) \r\n\r\n","import * as THREE from 'three'\r\n\r\n\r\n\r\nlet WALLS_ARRAY = []\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFromLink, objToLink, offset) => {\r\n    const offsetWallCollision = offset\r\n    const objFrom = objFromLink\r\n    const objTo = objToLink\r\n\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            vec3Src2.copy(objFrom.position)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2)\r\n            const intersectsWalls = raycasterWalls.intersectObjects(WALLS_ARRAY)\r\n\r\n            return intersectsWalls[0] && intersectsWalls[0].distance < offsetWallCollision\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const setItemToWallCollision = item => WALLS_ARRAY.push(item)\r\nexport const removeItemFromWallCollision = item => WALLS_ARRAY = WALLS_ARRAY.filter(mesh => item !== mesh)\r\n","\r\n\r\nlet arrItems = []\r\n\r\n\r\n\r\nexport const addItemToNearChecker = item => arrItems.push(item)\r\n\r\n\r\n\r\nexport const removeItemByName = name => arrItems = arrItems.filter(item => item.name !== name)\r\n\r\n\r\n\r\nexport const createCheckerNearItem = (mesh, emitter) => () => {\r\n    arrItems.forEach(item => {\r\n        if (mesh.position.distanceTo(item.position) < 10 && !item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = true\r\n            emitter.emit('nearMesh')({ toNear: true, mesh: item })\r\n        }\r\n        if (mesh.position.distanceTo(item.position) >= 10 && item.userData.nearPlayer) {\r\n            item.userData.nearPlayer = false\r\n            emitter.emit('nearMesh')({ toNear: false, mesh: item })\r\n        }\r\n    })\r\n}\r\n\r\n","import * as THREE from 'three'\r\n\r\nimport { playerConfig } from '../constants/constants_elements'\r\n\r\nimport { createComponentCollisionFloors } from '../components/component_collisionFloor'\r\nimport { createComponentCollisionWalls } from '../components/component_collisionWalls'\r\nimport { createCheckerNearItem } from '../components/component_checkNearItem'\r\n\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport function createPlayer (emitterLink) {\r\n    const emitter = emitterLink\r\n\r\n    const {\r\n        startPos,\r\n        startRot,\r\n        cameraData,\r\n        frontObjPos,\r\n        lightDataOne,\r\n        lightDataTwo,\r\n        speed,\r\n        offsetFromFloor,\r\n        offsetFromFloorFactor,\r\n        speedDown,\r\n        offsetWallCollision,\r\n        speedRot,\r\n    } = playerConfig\r\n\r\n\r\n    let camera\r\n    let keys = {}\r\n    let isButtonsDisabled = false\r\n    let isBlocked = true\r\n\r\n    const mainObj = new THREE.Object3D()\r\n    mainObj.position.fromArray(startPos)\r\n    mainObj.rotation.fromArray(startRot)\r\n\r\n    const frontObj = new THREE.Object3D()\r\n    frontObj.position.fromArray(frontObjPos)\r\n    mainObj.add(frontObj)\r\n  \r\n    {\r\n        const { fov, ratio, near, far, pos } = cameraData\r\n        camera = new THREE.PerspectiveCamera(fov, ratio, near, far)\r\n        camera.position.fromArray(pos)\r\n        mainObj.add(camera)\r\n    }\r\n\r\n    {\r\n        const { color, strenth, pos } = lightDataOne\r\n        const light = new THREE.PointLight(color, strenth)\r\n        light.position.fromArray(pos)\r\n        mainObj.add(light)\r\n    }\r\n\r\n    {\r\n      //const { color, strenth, pos } = lightDataTwo\r\n      //const light = new THREE.PointLight(color, strenth)\r\n      //light.position.fromArray(pos)\r\n      //mainObj.add(light)\r\n    }\r\n\r\n    const checkFloors = createComponentCollisionFloors(mainObj, offsetFromFloor, offsetFromFloorFactor, speedDown)\r\n    const checkWalls = createComponentCollisionWalls(mainObj, frontObj, offsetWallCollision)\r\n    const checkNearItem = createCheckerNearItem(mainObj, emitter) \r\n\r\n    const update = data => {\r\n        if (isButtonsDisabled) return;\r\n        if (isBlocked) return;\r\n\r\n        checkFloors.check(data)\r\n\r\n        if (!keys) return;\r\n\r\n        if (keys['up']) {\r\n            if (checkWalls.check()) return;\r\n\r\n            mainObj.translateZ(-speed * data.count)\r\n            //console.log(mainObj.position.x,  mainObj.position.y, mainObj.position.z)\r\n            checkNearItem()\r\n            emitter.emit('playerMove')(mainObj.position)\r\n        }\r\n        keys['left'] && (mainObj.rotation.y += (speedRot * data.count))\r\n        keys['right'] && (mainObj.rotation.y -= (speedRot * data.count))\r\n    }\r\n\r\n\r\n    emitter.subscribe('keyEvent')(data => keys = data)\r\n    emitter.subscribe(FRAME_UPDATE)(update)\r\n    emitter.subscribe('toggleDialog')(val => isButtonsDisabled = val.isOpen)\r\n\r\n\r\n    return {\r\n        start: () => { \r\n            isBlocked = false\r\n            checkFloors.start()\r\n        },\r\n        getObj: () => mainObj,\r\n        getCamera: () => camera,\r\n        setToPos: (x, y, z) => mainObj.position.set(x, y, z)\r\n    }\r\n}\r\n\r\n","import '../stylesheets/style.css'\r\n\r\n\r\n\r\n\r\n/** ANIMATION LOADER */\r\nconst loader = document.querySelector('.progress')\r\nlet offsetLoader = -100\r\nlet isAnimateLoader = true\r\n\r\n\r\n\r\nconst loaderTimeOut = () => {\r\n      if (!isAnimateLoader) return;\r\n\r\n      setTimeout(() => {\r\n            offsetLoader ++;\r\n            offsetLoader == 0 && (offsetLoader = -100)\r\n            loader.style.marginLeft = offsetLoader + '%'\r\n            loaderTimeOut()\r\n      }, 30)\r\n}\r\n\r\n\r\n\r\nloaderTimeOut()\r\n\r\n\r\n\r\nexport const showStartButton = emitter => {\r\n    const startButtons = document.querySelector('.startbuttons-wrapper')\r\n    const progressWrapper = document.querySelector('.progress-wrapper')\r\n\r\n    const hideStartScreen = e => {\r\n        emitter.emit('setLanguage')(e.target.dataset.lang)\r\n        document.querySelector('.start-screen').style.display = 'none'\r\n        \r\n    }\r\n\r\n    isAnimateLoader = false\r\n    startButtons.style.display = 'flex'\r\n    startButtons.addEventListener('click', hideStartScreen)\r\n    progressWrapper.style.display = 'none'\r\n}\r\n\r\n","export const REPLICIES = [\r\n    {\r\n        q: 'Привет !',\r\n        a: 'День добрый, кремниевая форма жизни.'\r\n    },\r\n    {\r\n        q: 'Что это за место.',\r\n        a: 'Это энтропийный гиппертоннель.'\r\n    }\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const REPLICIES_CONFIG = {\r\n    'START_MESS': [{\r\n        q: { txt: 'After a long wandering in the desert...' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'close', },\r\n        ],\r\n    }],\r\n    'TERMINAL_Z01': [{\r\n        q: { txt: 'Stranger, I threw you a terminal with a pass phrase. Remember:' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'And blood-black nothingness began to spin...' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'A system of cells interlinked within cells interlinked within cells interlinked within one stem...' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'And dreadfully distinct against the dark, a tall white fountain played.' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'close', dataAction: { idChangerState: 'openPhrasePROGRAM_00' } },\r\n        ],\r\n    },],\r\n    'TERMINAL_Z': [{\r\n        q: { txt: '' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_Z' } },\r\n        ]\r\n    },],\r\n    'TERMINAL_00': [{\r\n        q: { txt: 'Officer K-D-six-dash-three-dot-seven, let\\'s begin. Ready?' },\r\n        a: [\r\n            { txt: 'Yes, sir.',  isShow: true, action: 'next', },\r\n            { txt: 'No.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_NONE', } },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Recite your baseline.' },\r\n        a: [\r\n            { txt: 'I do not remember.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_NONE', } },\r\n            { txt: 'I\\'ll come back later.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_NONE', } },\r\n            { txt: 'And blood-black nothingness began to spin...', isShow: false, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Cells.' },\r\n        a: [\r\n            { txt: 'Cells.', isShow: true, action: 'startBridge',  dataAction: { keyProgramBridge: 'PROGRAM_00', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_01': [{\r\n        q: { txt: 'Have you ever been in an institution? Cells.' },\r\n        a: [\r\n            { txt: 'Cells.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Do they keep you in a cell? Cells.' },\r\n        a: [\r\n            { txt: 'Cells.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_01', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_02': [{\r\n        q: { txt: 'When you\\'re not performing your duties do they keep you in a little box? Cells.' },\r\n        a: [\r\n            { txt: 'Cells.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_02', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_03': [{\r\n        q: { txt: 'What\\'s it like to hold the hand of someone you love? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'next', idChangerState: null },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Did they teach you how to feel finger to finger? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_03', }},\r\n        ],\r\n    },],\r\n    'TERMINAL_04': [{\r\n        q: { txt: 'Do you long for having your heart interlinked? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Do you dream about being interlinked? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'startBridge',  dataAction: { keyProgramBridge: 'PROGRAM_04', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_05': [{\r\n        q: { txt: 'What\\'s it like to hold your child in your arms? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Do you feel that there\\'s a part of you that\\'s missing? Interlinked.' },\r\n        a: [\r\n            { txt: 'Interlinked.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_05', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_06': [{\r\n        q: { txt: 'Within cells interlinked.' },\r\n        a: [\r\n            { txt: 'Within cells interlinked.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'Why don\\'t you say that three times: Within cells interlinked.' },\r\n        a: [\r\n            { txt: 'Within cells interlinked.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: '' },\r\n        a: [\r\n            { txt: 'Within cells interlinked.', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: '' },\r\n        a: [\r\n            { txt: 'Within cells interlinked.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_06', } },\r\n        ],\r\n    },],\r\n    'TERMINAL_LAST' : [{\r\n        q: { txt: 'We\\'re done... Constant K, you can pick up your bonus.' },\r\n        a: [\r\n            { txt: 'Thank you, sir.', isShow: true, action: 'startBridge', dataAction: { keyProgramBridge: 'PROGRAM_LAST', idChangerState: 'resetAllAfterEnd' }},\r\n            { txt: 'Hey...', isShow: false, action: 'close', },\r\n        ],\r\n    },{\r\n        q: { txt: '...' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'next', },\r\n        ],\r\n    },{\r\n        q: { txt: '... ... ...' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'next', },\r\n        ],\r\n    },{\r\n        q: { txt: '...If you read it, you find dropped terminal and got top level of desert. Welcome...' },\r\n        a: [\r\n            { txt: 'Who are you?', isShow: true, action: 'next', },\r\n        ],\r\n    }, {\r\n        q: { txt: 'It does not matter. Later. May be..' },\r\n        a: [\r\n            { txt: '', isShow: true, action: 'close', dataAction: { idChangerState: 'clearMessagesAfterLastEnd' }},\r\n        ],\r\n    },]\r\n}\r\n\r\n\r\n\r\nexport const TRANSLATE_WORLDS = {\r\n    'ru': {\r\n        'After a long wandering in the desert...': 'После долгого блуждания по пустоши...',\r\n        'Stranger, I threw you a terminal with a pass phrase. Remember:': 'Незнакомец, я сбросил тебе терминал с парольной фразой. Запомни:',\r\n        'And blood-black nothingness began to spin...': 'Кроваво-черное ничто пустилось вить систему клеток,',\r\n        'A system of cells interlinked within cells interlinked within cells interlinked within one stem...' : 'связанных внутри, клеток, связанных внутри, клеток в едином стебле и явственно,',\r\n        'And dreadfully distinct against the dark, a tall white fountain played.': 'до жути на фоне тьмы ввысь белым бил фонтан.',\r\n        'Officer K-D-six-dash-three-dot-seven, let\\'s begin. Ready?': 'Офицер Кей Ди 6.3.7. приступим. Готовы?',\r\n        'Yes, sir.': 'Готов',\r\n        'No.': 'Не готов',\r\n        'Recite your baseline.': 'Ваша контрольная фраза.',\r\n        'I do not remember.': 'Я забыл.',\r\n        'I\\'ll come back later.': 'Я зайду попозже.',\r\n        'Cells.': 'Клетки.',\r\n        'Have you ever been in an institution? Cells.': 'Доводилось ли вам бывать в тюрьме? Клетки.',\r\n        'Do they keep you in a cell? Cells.': 'Вас держат в клетке? Клетки.',\r\n        'When you\\'re not performing your duties do they keep you in a little box? Cells.': 'Когда вы не исполняете обязанности, вас держат в коробке? Клетки.',\r\n        'Interlinked.': 'Связаны.',\r\n        'What\\'s it like to hold the hand of someone you love? Interlinked.': 'Что вы чувствуете держа за руку того кого любите? Связаны.',\r\n        'Did they teach you how to feel finger to finger? Interlinked.': 'Вас учили приставлять палец к пальцу? Связаны.',\r\n        'Do you long for having your heart interlinked? Interlinked.': 'Вы жаждете связать с кем-нибудь сердце? Связаны.',\r\n        'Do you dream about being interlinked? Interlinked.': 'Вам снится связь с кем-либо? Связаны.',\r\n        'What\\'s it like to hold your child in your arms? Interlinked.': 'Что вы чувствуете, держа в руках своего ребенка? Связаны.',\r\n        'Do you feel that there\\'s a part of you that\\'s missing? Interlinked.': 'Вы чувствуете, что вам чего-то не хватает? Связаны.',\r\n        'Within cells interlinked.': 'Клеток связанных внутри.',\r\n        'Why don\\'t you say that three times: Within cells interlinked.': 'Повторите три раза \"клеток связанных внутри',\r\n        'We\\'re done... Constant K, you can pick up your bonus.': 'На этом все. Кей стабилен, можете пройти за бонусом.',\r\n        'Thank you, sir.': 'Спасибо, сэр.',\r\n        '...If you read it, you find dropped terminal and got top level of desert. Welcome...': '...Если ты читаешь это, ты нашел упавший терминал и добрался до верхнего уровня пустоши.',\r\n        'Who are you?': 'Кто ты?',\r\n        'It does not matter. Later. May be..': 'Это неважно. Позже. Может быть..',\r\n        'Hey...': 'Эй...',\r\n\r\n        'open': 'пуск',\r\n\r\n        'Previous part: ': 'Предыдущая часть: ',\r\n        'Author: ': 'Автор: ',\r\n        'link': 'ссылка',\r\n        '/factory': '/ru/factory/'\r\n    }\r\n}","import { TRANSLATE_WORLDS } from '../constants/constants_replicies'\r\n\r\n\r\n\r\nlet currentLanguage = 'en'\r\n\r\n\r\n\r\nexport function createInfo (emitter) {\r\n    const cont = document.createElement('div')\r\n    cont.style.display = 'none'\r\n    cont.classList.add('info-cont')\r\n\r\n    const wrapper = document.createElement('div')\r\n    wrapper.classList.add('info-wrap')\r\n    cont.appendChild(wrapper)\r\n\r\n    const mess = document.createElement('div')\r\n    const createInnerMess = () => {\r\n        mess.innerHTML = t('Previous part \"Factory\": ')\r\n        mess.innerHTML += `<a href=\\'http://js.otrisovano.ru${ t('/bridge') }\\' target=\"blanck\">${ t('link') }</a></br>`\r\n        mess.innerHTML += t('Author: ')\r\n        mess.innerHTML += `<a href=\\'http://otrisovano.ru\\' target=\"blanck\">${ t('link') }</a></br>`\r\n        mess.innerHTML += t('Github: ')\r\n        mess.innerHTML += `<a href=\\'https://github.com/fire888/levels\\' target=\"blanck\">${ t('link') }</a></br>`\r\n    }\r\n    createInnerMess()\r\n    wrapper.appendChild(mess)\r\n\r\n    const closeButt = document.createElement('button')\r\n    closeButt.classList.add('control')\r\n    closeButt.innerText = 'x'\r\n    closeButt.addEventListener('click', () => {\r\n        cont.style.display = 'none'\r\n    })\r\n    wrapper.appendChild(closeButt)\r\n    document.querySelector('#butt-info').addEventListener('click', () => {\r\n        cont.style.display = 'flex'\r\n    })\r\n    emitter.subscribe('setLanguage')(keyLanguage => {\r\n        currentLanguage = keyLanguage\r\n        createInnerMess()\r\n    })\r\n\r\n\r\n    document.querySelector('.app-wrapper').appendChild(cont)\r\n}\r\n\r\n\r\n\r\n/** Translate. */\r\nconst t = val => (TRANSLATE_WORLDS[currentLanguage] && TRANSLATE_WORLDS[currentLanguage][val]) || val\r\n\r\n","import {\r\n    setItemToFloorsCollision,\r\n    removeItemFromFloorsCollision, \r\n} from '../components/component_collisionFloor'\r\nimport {\r\n    setItemToWallCollision,\r\n    removeItemFromWallCollision,\r\n} from '../components/component_collisionWalls'\r\nimport * as THREE from 'three'\r\nimport { S, H } from '../constants/constants_elements'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst STANDART_ROOMS = ['room_02', 'room_03', 'room_04', 'room_05']\r\nconst START_ROOMS = ['outer_walls', 'outer_floor', 'outer_road']\r\nconst EXIT_ROOMS = ['room_07']\r\n\r\n\r\n\r\n\r\n\r\nexport function createLevel (emitter, rooms, allMeshes) {\r\n    const group = new THREE.Group()\r\n    const objRooms = {}\r\n\r\n\r\n    let isBotLevel = false\r\n\r\n\r\n\r\n    const createRoom = (kv, key) => {\r\n        const instanceKey = key || STANDART_ROOMS[Math.floor(Math.random() * STANDART_ROOMS.length)]\r\n        \r\n        const objKey = `r_${kv[0]}_${kv[1]}_${kv[2]}` \r\n\r\n        const mesh = rooms[instanceKey].clone()\r\n        mesh.position.set(kv[0] * S, kv[1] * H, kv[2] * S)\r\n        setItemToFloorsCollision(mesh)\r\n        setItemToWallCollision(mesh)\r\n        group.add(mesh)\r\n        objRooms[objKey] = mesh\r\n\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'createRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isAddBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_06' && createRoom([kv[0], kv[1] + 1, kv[2]], 'room_dummy')\r\n    }\r\n\r\n\r\n    const removeRoom = kv => {\r\n        const objKey = `r_${ kv[0] }_${ kv[1] }_${ kv[2] }`\r\n        if (!objRooms[objKey]) return;\r\n\r\n    \r\n        const instanceKey = objRooms[objKey].name\r\n\r\n        // objRooms[objKey].children[0].geometry.dispose()\r\n        // objRooms[objKey].children[0].material.dispose()\r\n        group.remove(objRooms[objKey])\r\n        removeItemFromFloorsCollision(objRooms[objKey])\r\n        removeItemFromWallCollision(objRooms[objKey])\r\n        delete objRooms[objKey]\r\n\r\n        if (instanceKey === 'room_01') {\r\n            isBotLevel = false\r\n        }\r\n\r\n        emitter.emit('levelChanged')({\r\n            typeLevelChange: 'destroyRoom',\r\n            instanceKey,\r\n            objKey,\r\n            kv,\r\n            isRemoveBot: instanceKey === 'room_01'\r\n        })    \r\n\r\n        instanceKey === 'room_dummy' && removeRoom([kv[0], kv[1] - 1, kv[2]])\r\n        instanceKey === 'room_06' && removeRoom([kv[0], kv[1] + 1, kv[2]])\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    createRoom([0, -1, 0], 'room_02')\r\n    createRoom([0, -1, -1], 'room_02')\r\n    createRoom([-1, -1, 0], 'room_02')\r\n    createRoom([1, -1, 0], 'room_02')\r\n\r\n\r\n\r\n    /** add remove start corridors */\r\n    const startL = {}\r\n    for (let i = 0; i < START_ROOMS.length; ++i) {\r\n        const l = allMeshes[START_ROOMS[i]].clone()\r\n        setItemToFloorsCollision(l)\r\n        setItemToWallCollision(l)\r\n        group.add(l)\r\n        l.position.set(0, -1 * H, 0)\r\n        startL[START_ROOMS[i]] = l\r\n    }\r\n    emitter.subscribe('destroyStartCorridor')(() => {\r\n        for (let key in startL) {\r\n            removeItemFromFloorsCollision(startL[key])\r\n            removeItemFromWallCollision(startL[key])\r\n            group.remove(startL[key])\r\n        }\r\n    })\r\n\r\n\r\n\r\n    let wentLevels = 0\r\n    let flagIsSpecial = false\r\n\r\n    emitter.subscribe('changeLevel')(({ direction, oldQuadrant, newQuadrant, counter }) => {\r\n        console.log(oldQuadrant, newQuadrant, counter )\r\n\r\n        let keyCreateRoom = false\r\n        if (counter) {\r\n            wentLevels = counter(wentLevels)\r\n            console.log('wentLevels', wentLevels)\r\n\r\n            if (flagIsSpecial) {\r\n                flagIsSpecial = false\r\n            } else {\r\n                if (wentLevels < 1) {\r\n                } else if (wentLevels < 10) {\r\n                    keyCreateRoom = 'room_01'\r\n                    flagIsSpecial = true\r\n                } else {\r\n                    keyCreateRoom = 'room_06'\r\n                    flagIsSpecial = true\r\n                }\r\n            }\r\n\r\n            if (wentLevels > 3 && newQuadrant[1] === 2) {\r\n                keyCreateRoom = 'room_07'\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const oldKv = oldQuadrant, curKv = newQuadrant\r\n        // move west\r\n        if (curKv[0] < oldKv[0]) {\r\n            console.log('----------- west')\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] + 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create west\r\n            createRoom([oldKv[0] - 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create soush\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n        // move east\r\n        if (curKv[0] > oldKv[0]) {\r\n            console.log('----------- east')\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n\r\n            // set center to east\r\n            objRooms[`r_${curKv[0] - 1}_${curKv[1]}_${curKv[2]}`] = objRooms[`r_${oldKv[0]}_${oldKv[1]}_${oldKv[2]}`]\r\n\r\n            // create east\r\n            createRoom([oldKv[0] + 2, oldKv[1], oldKv[2]], keyCreateRoom)\r\n\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1], keyCreateRoom)\r\n\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move north\r\n        if (curKv[2] < oldKv[2]) {\r\n            console.log('-----------north')\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n\r\n            // set center to south\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] + 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create north\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] - 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n\r\n        // move south\r\n        if (curKv[2] > oldKv[2]) {\r\n            console.log('-----------south')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n\r\n            // set center to north\r\n            objRooms[`r_${ curKv[0] }_${ curKv[1] }_${ curKv[2] - 1 }`] = objRooms[`r_${ oldKv[0] }_${ oldKv[1] }_${ oldKv[2] }`]\r\n\r\n            // create south\r\n            createRoom([oldKv[0], oldKv[1], oldKv[2] + 2], keyCreateRoom)\r\n\r\n            // remove west\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create west\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]], keyCreateRoom)\r\n\r\n            // remove east\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create east\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]], keyCreateRoom)\r\n        }\r\n\r\n        // move top\r\n        if (curKv[1] > oldKv[1] || curKv[1] < oldKv[1]) {\r\n            console.log('-----------top')\r\n            // remove north\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] - 1])\r\n            // create north\r\n            createRoom([curKv[0], curKv[1], curKv[2] - 1])\r\n            // remove south\r\n            removeRoom([oldKv[0], oldKv[1], oldKv[2] + 1])\r\n            // create south\r\n            createRoom([curKv[0], curKv[1], curKv[2] + 1])\r\n            // remove left\r\n            removeRoom([oldKv[0] - 1, oldKv[1], oldKv[2]])\r\n            // create left\r\n            createRoom([curKv[0] - 1, curKv[1], curKv[2]])\r\n            // remove right\r\n            removeRoom([oldKv[0] + 1, oldKv[1], oldKv[2]])\r\n            // create right\r\n            createRoom([curKv[0] + 1, curKv[1], curKv[2]])\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return { group }\r\n}\r\n\r\n\r\n\r\n// const geometry = mesh.geometry\r\n// const wireframe = new THREE.WireframeGeometry( geometry );\r\n// const line = new THREE.LineSegments( wireframe );\r\n// line.material.color = { r: 0.5, g: 0.5, b: 0.5}\r\n// line.material.linewidth = 50\r\n// line.material.opacity = 0.5;\r\n// line.material.transparent = true;\r\n// mesh.add( line );","import * as THREE from 'three'\r\nimport { GLTFCopy } from '../helpers/util_GLTFcopy'\r\n\r\n\r\nconst OFFSETS = {\r\n    'room_01': { x: 55, z: 75}\r\n}\r\n\r\nexport class Bot {\r\n    constructor () {\r\n        this.inScene = false\r\n\r\n        this._state = 'go' // || 'rotate' || 'say'\r\n\r\n        this._targetAngle = null\r\n\r\n\r\n        this.container = new THREE.Group()\r\n\r\n        this._modelGroup = new THREE.Group()\r\n        this._modelGroup.position.x = OFFSETS['room_01'].x\r\n        this._modelGroup.position.z = OFFSETS['room_01'].z\r\n        this._modelGroup.rotation.y = Math.random() * (2 * Math.PI)\r\n        this.container.add(this._modelGroup)\r\n\r\n        this._objFrom = new THREE.Object3D()\r\n        this._modelGroup.add(this._objFrom)\r\n\r\n\r\n        this._objTo = new THREE.Object3D()\r\n        this._objTo.position.set(0, 0, 1)\r\n        this._modelGroup.add(this._objTo)\r\n\r\n\r\n        const copy = GLTFCopy(Bot.botScene)\r\n        this.model = copy.scene.children[0]\r\n        this.model.children[1].material = Bot.botMaterial\r\n        this._animations = Bot.botScene.animations\r\n        this._mixer = new THREE.AnimationMixer(this.model.children[1])\r\n        this._walkAction = this._mixer.clipAction(this._animations[0])\r\n        this._walkAction.play()\r\n\r\n        this._modelGroup.add(this.model)\r\n    }\r\n\r\n\r\n    update (data) {\r\n        this._mixer.update(data.delta)\r\n\r\n        if (!this._componentCollision) return;\r\n\r\n        this._updateState()\r\n    }\r\n\r\n\r\n    setCollisionMesh (mesh) {\r\n        this._collisionMeshes = [mesh]\r\n        this.container.add(mesh)\r\n        mesh.material.visible = false\r\n\r\n\r\n        this._componentCollision = createComponentCollisionWalls(this._objFrom, this._objTo, 7, this._collisionMeshes)\r\n    }\r\n\r\n    removeCollisionMesh () {\r\n        this._collisionMeshes = null\r\n        this._componentCollision = null\r\n    }\r\n\r\n\r\n    prepareToSay (pos) {\r\n        this._state = 'say'\r\n\r\n\r\n        this._modelGroup.lookAt(pos.x, this.container.position.y, pos.z)\r\n        //this._modelGroup.rotateOnAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2)\r\n    }\r\n\r\n\r\n    /** internal *****************************/\r\n\r\n    _updateState () {\r\n        if (this._state === 'go') {\r\n            const isNear = this._componentCollision.check()\r\n            if (!isNear) {\r\n                this._modelGroup.translateZ(0.1)\r\n            } else {\r\n                this._startRotate()\r\n            }\r\n        }\r\n\r\n        if (this._state === 'rotate') {\r\n            this._modelGroup.rotation.y += ((this._targetAngle - this._modelGroup.rotation.y) < 0) ? -.01 : .01\r\n            this._modelGroup.rotation.y %= 2 * Math.PI\r\n            const isComplete = Math.abs(this._modelGroup.rotation.y - this._targetAngle) < .5\r\n            isComplete && this._startGo()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _startGo () {\r\n        this._state = 'go'\r\n    }\r\n\r\n\r\n    _startRotate() {\r\n        this._state = 'rotate'\r\n        this._targetAngle = (this._modelGroup.rotation.y + 1.5 + Math.random() * 4) % (2 * Math.PI)\r\n    }\r\n}\r\n\r\nBot.botScene = null\r\nBot.botMaterial = null\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createComponentCollisionWalls = (objFrom, objTo, offset, arrWalls) => {\r\n    const vec3Src2 = new THREE.Vector3()\r\n    const vec3Ray2 = new THREE.Vector3()\r\n\r\n    return {\r\n        check: () => {\r\n            objTo.getWorldPosition(vec3Ray2)\r\n            objFrom.getWorldPosition(vec3Src2)\r\n            vec3Ray2.sub(vec3Src2)\r\n\r\n            const raycasterWalls = new THREE.Raycaster(vec3Src2, vec3Ray2, 0, 20)\r\n            const intersectsWalls = raycasterWalls.intersectObject(arrWalls[0], true)\r\n\r\n            return !!intersectsWalls[0]\r\n        }\r\n    }\r\n}","import * as THREE from 'three'\r\n\r\n\r\n\r\nexport const GLTFCopy = gltf => {\r\n    const clone = {\r\n          animations: gltf.animations,\r\n          scene: gltf.scene.clone(true)\r\n    };\r\n  \r\n    const skinnedMeshes = {};\r\n  \r\n    gltf.scene.traverse(node => {\r\n        if (node.isSkinnedMesh) {\r\n            skinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    const cloneBones = {};\r\n    const cloneSkinnedMeshes = {};\r\n  \r\n    clone.scene.traverse(node => {\r\n        if (node.isBone) {\r\n            cloneBones[node.name] = node;\r\n        }\r\n  \r\n        if (node.isSkinnedMesh) {\r\n            cloneSkinnedMeshes[node.name] = node;\r\n        }\r\n    });\r\n  \r\n    for (let name in skinnedMeshes) {\r\n        const skinnedMesh = skinnedMeshes[name];\r\n        const skeleton = skinnedMesh.skeleton;\r\n        const cloneSkinnedMesh = cloneSkinnedMeshes[name];\r\n  \r\n        const orderedCloneBones = [];\r\n  \r\n        for (let i = 0; i < skeleton.bones.length; ++i) {\r\n            const cloneBone = cloneBones[skeleton.bones[i].name];\r\n            orderedCloneBones.push(cloneBone);\r\n        }\r\n  \r\n        cloneSkinnedMesh.bind(\r\n            new THREE.Skeleton(orderedCloneBones, skeleton.boneInverses),\r\n            cloneSkinnedMesh.matrixWorld);\r\n    }\r\n  \r\n    return clone;\r\n}","\r\nexport const toggleDialog = dispatch => ({\r\n    toggleDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_DIALOG',\r\n            isDialog: is,\r\n        })\r\n    },\r\n\r\n    toggleButtonDialog: is => {\r\n        dispatch({\r\n            type: 'TOGGLE_BUTTON_DIALOG',\r\n            isButtonDialog: is,\r\n        })\r\n    }\r\n})\r\n","import { connect } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    userReplicies: state.app.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nexport const UserReplicies = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"userReplicies\">\r\n            {props.userReplicies.map(item => (<button\r\n                    key={Math.floor(Math.random()* 100000)}\r\n                    onClick={() => console.log('saaa')}>\r\n                    {item.q}\r\n                </button>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    botAnswers: state.app.botAnswers,\r\n})\r\n\r\n\r\n\r\n\r\nexport const BotAnswers = connect(mapStateToProps)(function (props) {\r\n    return (\r\n        <div className=\"botAnswers\">\r\n            {props.botAnswers.map(item => (<div key={Math.floor(Math.random() * 100000)}>\r\n                    <p>{item.q}</p>\r\n                    <p>{item.a}</p>\r\n                </div>)\r\n            )}\r\n        </div>\r\n    )\r\n})","import { connect } from 'react-redux'\r\nimport { toggleDialog } from '../store/actions'\r\nimport { UserReplicies } from './UserReplicies'\r\nimport { BotAnswers } from './BotAnswers'\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isButtonDialog: state.app.isButtonDialog,\r\n    isDialog: state.app.isDialog,\r\n    //botReplicies: state.app.botReplicies,\r\n    //userReplicies: state.app.userReplicies,\r\n})\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n    !pr.dispatch && (pr.dispatch = props.dispatch)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"dialog\">\r\n                {props.isDialog && props.isButtonDialog && (<div className=\"dialog-inner\">\r\n                    <BotAnswers />\r\n                    <UserReplicies />\r\n                </div>)}\r\n            </div>\r\n            {props.isButtonDialog && (<button\r\n                className=\"last-elem\"\r\n                onClick={() => {\r\n                    toggleDialog(props.dispatch).toggleDialog(!props.isDialog)\r\n                }}>\r\n                { props.isDialog ? 'close dialog' : 'open dialog' }</button>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const pr = { dispatch: null }\r\n\r\nexport default connect(mapStateToProps)(App);","import * as THREE from 'three'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\nimport { MAT_IRON } from '../constants/constants_elements'\r\nimport { Bot } from '../entities/Bot'\r\nimport { pr } from '../componentsReact/App'\r\nimport { toggleDialog } from '../store/actions'\r\n\r\n\r\nconst S = 175.335\r\nconst H = 70\r\n//const H_BOT = 14.193\r\nconst H_BOT = 14\r\n\r\n\r\n\r\n\r\nexport const createSystemBots = (assets, materials, emitter) => {\r\n    Bot.botMaterial = materials.iron\r\n    Bot.botScene = assets.bot\r\n\r\n\r\n\r\n    const groupBots = new THREE.Group()\r\n    const arrBots = []\r\n\r\n\r\n\r\n    for (let i = 0; i < 5; ++i) {\r\n        const bot = new Bot()\r\n        groupBots.add(bot.container)\r\n        bot.container.position.set(-30 + i * 30, -92, 750)\r\n        bot.inScene = 'aaa'\r\n        bot.setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n        arrBots.push(bot)\r\n    }\r\n\r\n\r\n\r\n\r\n    emitter.subscribe(FRAME_UPDATE)(data => {\r\n        for (let i = 0; i < arrBots.length; ++i) arrBots[i].inScene && arrBots[i].update(data)\r\n    })\r\n\r\n\r\n    emitter.subscribe('destroyStartCorridor')(() => {\r\n        for (let i = 0; i < arrBots.length; ++i) {\r\n            arrBots[i].inScene = null\r\n            arrBots[i].container.position.y = -10000\r\n            arrBots[i].removeCollisionMesh()\r\n        }\r\n    })\r\n\r\n    emitter.subscribe('levelChanged')(({ typeLevelChange, instanceKey, objKey, kv, isAddBot, isRemoveBot }) => {\r\n        if (isAddBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (!arrBots[i].inScene) {\r\n                    arrBots[i].inScene = objKey\r\n                    arrBots[i].container.position.set(kv[0] * S, kv[1] * H + H_BOT, kv[2] * S)\r\n                    arrBots[i].setCollisionMesh(assets.collisionsBotsRooms['collision_r_01'].clone())\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (isRemoveBot) {\r\n            for (let i = 0; i < arrBots.length; ++i) {\r\n                if (arrBots[i].inScene === objKey) {\r\n                    arrBots[i].inScene = null\r\n                    arrBots[i].container.position.y = -10000\r\n                    arrBots[i].removeCollisionMesh()\r\n                }\r\n            } \r\n        }\r\n    })\r\n\r\n\r\n    emitter.subscribe('playerMove')(pos => {\r\n        for (let i = 0; i < arrBots.length; ++i) {\r\n            //if (!arrBots[i].inScene && arrBots[i]._state === 'say') continue;\r\n            if (!arrBots[i].inScene) continue;\r\n\r\n            const botWorldPos = new THREE.Vector3()\r\n            arrBots[i]._modelGroup.getWorldPosition(botWorldPos)\r\n            const distance = botWorldPos.distanceTo(pos)\r\n\r\n\r\n            if (arrBots[i]._state === 'say' && distance > 30) {\r\n                arrBots[i]._startRotate()\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(false)\r\n                continue;\r\n            }\r\n\r\n\r\n            if (arrBots[i]._state !== 'say' && distance < 30) {\r\n                arrBots[i].prepareToSay(pos)\r\n                toggleDialog(pr.dispatch).toggleButtonDialog(true)\r\n\r\n\r\n                continue;\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    return {\r\n        groupBots,\r\n    } \r\n}\r\n\r\n\r\n","import { createStore , applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { combineReducers } from 'redux'\r\n\r\nimport { REPLICIES } from '../constants/constants_replicies'\r\n\r\n\r\n\r\nconst appData = {\r\n    botAnswers: [],\r\n    userReplicies: [],\r\n    isDialog: false,\r\n    isButtonDialog: false\r\n}\r\n\r\n\r\n\r\n\r\nconst app = function(state = appData, action) {\r\n\r\n    if (action.type === 'TOGGLE_DIALOG') {\r\n\r\n        const botAnswers = [...REPLICIES]\r\n        const userReplicies = [...REPLICIES]\r\n\r\n        return ({\r\n            ...state,\r\n            botAnswers,\r\n            userReplicies,\r\n            isDialog: action.isDialog,\r\n        })\r\n    }\r\n\r\n    if (action.type === 'TOGGLE_BUTTON_DIALOG') {\r\n\r\n        //const isDialog = action.isButtonDialog === false ? false :\r\n\r\n        return ({\r\n            ...state,\r\n            isDialog: false,\r\n            isButtonDialog: action.isButtonDialog,\r\n        })\r\n    }\r\n\r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({ app })\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n","import { createDeviceResizer } from './helpers/util_deviceResizer'\r\nimport { KeyBoard } from './helpers/util_keyBoard'\r\nimport { emitter } from './helpers/util_emitter'\r\nimport { createFrameUpdater } from './helpers/util_frameUpater'\r\nimport { createActionByChangedQuadrant } from './helpers/createActionByChangedQuadrant'\r\n\r\nimport { ASSETS_TO_LOAD } from './constants/constants_elements'\r\n\r\nimport { loadAssets } from './helpers/utils_loadAssets'\r\nimport { prepareMeshesFromAssets } from './helpers/helper_prepareMeshesFromAssets'\r\n\r\nimport { createStudio } from './entities/createStudio'\r\nimport { createPlayer } from './entities/createPlayer'\r\n\r\n\r\nimport { showStartButton } from './systems/systemHtml_intro'\r\nimport { createInfo } from './systems/systemHtml_info'\r\nimport { createLevel } from './systems/system_level'\r\nimport { createSystemBots } from './systems/system_bots'\r\n\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport { FRAME_UPDATE } from './constants/constants_elements'\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentsReact/App';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/createStore'\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n<App />\r\n</Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\ncreateDeviceResizer()\r\n\r\n\r\nconst init = assets => {\r\n    createFrameUpdater(emitter)\r\n    emitter.subscribe(FRAME_UPDATE)(() => TWEEN.update())\r\n\r\n    const studio = createStudio(emitter, assets)\r\n\r\n    /** player */\r\n    new KeyBoard(emitter)\r\n    const player = createPlayer(emitter)\r\n    studio.setCamera(player.getCamera())\r\n    studio.addToScene(player.getObj())\r\n\r\n    /** prepare assets */\r\n    const { allMeshes,  rooms, materials } = prepareMeshesFromAssets(assets)\r\n\r\n    /** level */\r\n    const { group } = createLevel(emitter, rooms, allMeshes)\r\n    studio.addToScene(group)\r\n\r\n    /** bots */\r\n    const systemBots = createSystemBots(assets, materials, emitter)\r\n    studio.addToScene(systemBots.groupBots)\r\n\r\n\r\n    createActionByChangedQuadrant()\r\n    \r\n    setTimeout(() => player.start(), 500)\r\n\r\n\r\n    /** UI */\r\n    createInfo(emitter)\r\n    showStartButton(emitter)\r\n}\r\n\r\n\r\n\r\nwindow.addEventListener('load', () => loadAssets(ASSETS_TO_LOAD).then(init))\r\n","const MAX_W = 400\r\nconst MIN_W = 350\r\n\r\n\r\n\r\nexport function createDeviceResizer () {\r\n    const appWrapper = document.querySelector('.app-wrapper')\r\n    const fullScreenButton = document.querySelector('#butt-fullscreen')\r\n\r\n    /** fullscreen */\r\n    const openAppFullScreenIfMobile = () => {    \r\n        if (document.fullscreenElement) { return; }\r\n    \r\n        if (appWrapper.requestFullscreen) {\r\n            appWrapper.requestFullscreen()\r\n        } else if (appWrapper.mozRequestFullScreen) { \r\n            appWrapper.mozRequestFullScreen()\r\n        } else if (appWrapper.webkitRequestFullscreen) { \r\n            appWrapper.webkitRequestFullscreen()\r\n        } else if (appWrapper.msRequestFullscreen) { \r\n            appWrapper.msRequestFullscreen()\r\n        }\r\n    }\r\n    fullScreenButton.addEventListener('click', openAppFullScreenIfMobile)\r\n\r\n    /** resize */\r\n    const resize = e => {\r\n        appWrapper.style.width = window.innerWidth + 'px'\r\n        appWrapper.style.height = window.innerHeight + 'px'\r\n        appWrapper.style.fontSize = Math.max(Math.min(Math.min(window.innerWidth, window.innerHeight), MAX_W), MIN_W) / 50 + 'px'\r\n\r\n        fullScreenButton.style.display = document.fullscreenElement ? \"none\" : \"flex\"\r\n    }\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n}\r\n\r\n\r\n\r\nconst checkTouch = () => \r\n    navigator.maxTouchPoints || 'ontouchstart' in document.documentElement\r\n\r\n\r\n\r\nconst checkIsCanOrientation = () => \r\n    typeof window.orientation !== 'undefined'\r\n\r\n","import * as R from 'ramda'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport function createFrameUpdater (eventEmitter) {\r\n\r\n    const emitFrameUpdate = eventEmitter.emit(FRAME_UPDATE)\r\n\r\n    let data = {\r\n        time: 0,\r\n        delta: 0,\r\n        count: 0,\r\n        oldTime: 0\r\n    }\r\n\r\n    const getDataFromGlobalVar = () => data\r\n\r\n    const updateTime = data => { \r\n        data.time = Date.now()\r\n        return data\r\n    }\r\n\r\n    const updateDelta = data => { \r\n        data.delta = (data.time - data.oldTime) * 0.001\r\n        if (isNaN(data.delta) || data.delta > 1000 || data.delta == 0 ) {\r\n            data.delta = 1000/60 * 0.001;\r\n        }\r\n        return data\r\n    }\r\n\r\n    const updateCount = data => { \r\n        data.count = data.delta / (1/60)\r\n        return data\r\n    }\r\n\r\n    const emit = data => { \r\n        emitFrameUpdate(data)\r\n        return data\r\n    }\r\n\r\n    const updateOldTime = data => { \r\n        data.oldTime = data.time\r\n        return data\r\n    }\r\n\r\n    const saveDataInGlobalVar = dataFromChine => {\r\n        data = dataFromChine\r\n        return data\r\n    }\r\n\r\n    const logger = data => {\r\n        console.log(data)\r\n        return data\r\n    } \r\n\r\n    const update = R.pipe(\r\n        getDataFromGlobalVar,\r\n        updateTime,\r\n        updateDelta,\r\n        updateCount, \r\n        emit, \r\n        updateOldTime, \r\n        saveDataInGlobalVar\r\n    )\r\n\r\n    const animate = () => {\r\n        requestAnimationFrame(animate)\r\n        update(data)\r\n    }\r\n\r\n    animate() \r\n}\r\n\r\n","import * as THREE from 'three'\r\nimport * as TWEEN from '@tweenjs/tween.js'\r\nimport {\r\n    studioConfig,\r\n    //FLOORS_COLORS,\r\n    FLOORS_CONF,\r\n} from '../constants/constants_elements'\r\nimport { FRAME_UPDATE } from '../constants/constants_elements'\r\n\r\n\r\n\r\nexport function createStudio (emitter, assets) {\r\n    const { canId, rendererCon, clearColor, fogData, amb } = studioConfig\r\n\r\n    const canvas = document.getElementById(canId)\r\n    rendererCon.canvas = canvas\r\n\r\n    const renderer = new THREE.WebGLRenderer(rendererCon)\r\n    renderer.setClearColor(clearColor)\r\n    renderer.setPixelRatio(window.devicePixelRatio)\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n\r\n    const scene = new THREE.Scene()\r\n    scene.background = assets.skyBox\r\n\r\n    {\r\n        const { color, fogNear, fogFar } = FLOORS_CONF['-1']['outer']\r\n        scene.fog = new THREE.Fog(color, fogNear, fogFar)\r\n    }\r\n\r\n    let lightA\r\n    {\r\n        const { color, strength } = amb\r\n        lightA = new THREE.AmbientLight( color, strength )\r\n        scene.add( lightA )\r\n    }\r\n\r\n    let camera = null\r\n\r\n    const resize = () => {\r\n        const size = { width: window.innerWidth, height: window.innerHeight }\r\n        renderer.setSize(size.width, size.height)\r\n        if (camera) {\r\n            camera.aspect = size.width/size.height\r\n            camera.updateProjectionMatrix()\r\n        }\r\n    }\r\n\r\n    window.addEventListener('resize', resize)\r\n    resize()\r\n\r\n    const addToScene = scene.add.bind(scene)\r\n\r\n    const drawFrame = () => camera && renderer.render(scene, camera)\r\n\r\n\r\n\r\n    emitter.subscribe(FRAME_UPDATE)(drawFrame)\r\n\r\n\r\n\r\n    emitter.subscribe('toggleImgSceneBack')(({ backgroundImg }) => {\r\n        console.log('backgroundImg', backgroundImg)\r\n        scene.background = backgroundImg ? assets.skyBox : null\r\n    })\r\n\r\n\r\n    emitter.subscribe('changeEnvironment')(data => {\r\n        const { newQuadrant, environmentMode } = data\r\n\r\n        if (!FLOORS_CONF[newQuadrant[1]]) return;\r\n\r\n        const { fogNear, fogFar, color } = FLOORS_CONF[newQuadrant[1]][environmentMode]\r\n\r\n\r\n        let startData = {\r\n            color: scene.fog.color,\r\n            near: scene.fog.near,\r\n            far: scene.fog.far,\r\n        }\r\n        let endData = {\r\n            color: new THREE.Color(color),\r\n            near: fogNear,\r\n            far: fogFar,\r\n        }\r\n\r\n\r\n        new TWEEN.Tween(startData)\r\n            .to(endData, 3000)\r\n            .onUpdate(() => {\r\n                scene.fog.color = startData.color\r\n                scene.fog.near = startData.near\r\n                scene.fog.far = startData.far\r\n                lightA.color = startData.color\r\n                renderer.setClearColor(startData.color)\r\n\r\n            })\r\n            .start()\r\n    })\r\n\r\n\r\n\r\n    return {\r\n        setCamera: cam => camera = cam,\r\n        addToScene,\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}